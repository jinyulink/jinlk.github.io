<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【題解】CSES - Missing Number</title>
    <link href="/2021/12/22/CSES-Missing-Number/"/>
    <url>/2021/12/22/CSES-Missing-Number/</url>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/1083">題目</a></h2><p>You are given all numbers between 1,2,…,n except one. Your task is to find the missing number.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first input line contains an integer n.</p><p>The second line contains n−1 numbers. Each number is distinct and between 1 and n (inclusive). </p><ul><li>2≤n≤2⋅105</li></ul><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print the missing number.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>Input:</p><blockquote><p>5<br>2 3 1 5</p></blockquote><p>Output:</p><blockquote><p>4 </p></blockquote><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://cses.fi/problemset/task/1083</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> n; <br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> x=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> y;<br>        cin&gt;&gt;y;<br>        x+=y;<br>    &#125;<br>    cout&lt;&lt;(n*(<span class="hljs-number">1</span>+n))/<span class="hljs-number">2</span>-x; <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>拿測資來舉例，算出1加到5的合(<strong>等差 梯形公式</strong>  )，在扣掉Input的每一項加總，即為Missing Number.</p>]]></content>
    
    
    <categories>
      
      <category>解題筆記</category>
      
      <category>CSES</category>
      
      <category>Introductory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大一CPE初體驗心得</title>
    <link href="/2021/12/21/CPE-first-time/"/>
    <url>/2021/12/21/CPE-first-time/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CPE類似於大學版的APCS，並且都是免費的(讚)，抱著不用錢的心態，就索性報名考考看。由於是第一次考，經驗不多，把試場一些注意事項寫下來，解題部分看看就好，比我強的人大有人在，也歡迎大老在底下留言，交流交流。</p><p>這次考的場次是2021/12/21的。</p><h1 id="考前"><a href="#考前" class="headerlink" title="考前"></a>考前</h1><p>高中有打C++解題的經歷，所以對基本語法還算OK，不過沒什麼演算法基礎。考前幾週有去codeforces打了兩場比賽跟開始做CPE官網列出的<a href="https://cpe.cse.nsysu.edu.tw/environment.php">一顆星題(共49題)</a>，不過我沒有每題都打完(懶)，大概看了三十幾題就來考了。</p><h1 id="考試"><a href="#考試" class="headerlink" title="考試"></a>考試</h1><p>考場就是學校資工系的電腦教室，座位隨便坐，前面有快一個小時的時間給你測試系統，建議要考的人先在家自己熟悉一下，不要像我一開始不熟悉緊張得要死…，CPE是採用<a href="http://coding-frenzy.arping.me/">瘋狂程設</a>這套軟體(介面十分古老)。<br>考試可以帶筆，用試場提供的規則紙張當計算紙。</p><h2 id="考試介面"><a href="#考試介面" class="headerlink" title="考試介面"></a>考試介面</h2><p>介面很簡單，分成上─題目、中─Code、下─輸出，右邊有編譯後的狀態 (AC, TLE, WA 等)、Compiler 訊息、input/output 資料，此外，系統有英漢字典跟<strong>C/C++參考資料</strong>可以查，挺佛心的，同時可以看到即時排名，包含教室排名(你所在考場的排名)及全國排名，但排名有時會出現教室排名更新了，全國的卻還沒更新的情況，請已教室排名顯示的解題紀錄為主，因為全國考場會每五分鐘傳一次資料到中山大學伺服器(CPE主辦單位)，難免會有塞車情形，可以過個再五分鐘按f5刷新。</p><p>此外，題目會有兩種按鈕，<strong>看題</strong>跟<strong>解題</strong>，可以先把題目看完後，再按解題開始code，看題時間不會記錄到解題時間內。</p><p><img src="/img/%E7%98%8B%E7%8B%82.png" alt="瘋狂程設介面"></p><h2 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h2><p><a href="https://cpe.cse.nsysu.edu.tw/cpe/test_data/2021-12-21">題目</a></p><ol><li><p><input checked="" disabled="" type="checkbox">  點開第一題，大概想了五分鐘，先把大概的程式碼寫在紙上後，按下解題，開始code，幸運的思路沒錯，不用修改code就拿到第一個<font color=#4DC44B>AC</font>，不過美好的開始不代表會一直美好下去…</p></li><li><p><input checked="" disabled="" type="checkbox">  第二題想了大概二十分鐘吧，原本以為只有質數有可能為解，打算用<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95">Sieve of Eratosthenes</a>判斷質數後，判斷答案，仔細想了想才發現不一定，最後用基於<strong>Sieve of Eratosthenes</strong>的方法修改了一下思路，最後總共花了36分鐘拿到<font color=#4DC44B>AC</font>。</p></li><li><p><input checked="" disabled="" type="checkbox">  接下來由於看到第三題感覺比較複雜，就先跳到第四題了，大概花了十幾分鐘，用了雙層迴圈拿到<font color=#4DC44B>AC</font>，但這方法似乎沒有很好。</p></li></ol><ul><li>目前為止對我來說都還挺順利，但接下來…</li></ul><ol start="4"><li><p>第三題我印象深刻(<a href="https://zerojudge.tw/ShowProblem?problemid=c082">UVA00118</a>)，機器人走路這題搞了我快兩小時…，慢慢手刻每一行Code，當我還在尋思程式哪裡出錯時，考試最後十分鐘，我才發現我搞錯題意了…，但為時已晚…</p></li><li><p>5-7題還不敢碰，演算法沒什麼基礎Σ(lliдﾟﾉ)ﾉ</p></li></ol><h1 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h1><p>第一次考CPE拿下三題，符合我的預期，但很嘔的是原本如果仔細看題目，應該能拿到四題的說..，總之打算明年三月再去考一次，這段期間希望自己多刷一些題跟學演算法吧!</p><h3 id="成績紀錄"><a href="#成績紀錄" class="headerlink" title="成績紀錄"></a>成績紀錄</h3><table><thead><tr><th>考試日期</th><th>解題數</th><th>排名</th><th>排名比例</th><th>評等</th></tr></thead><tbody><tr><td>2021-12-21 (第一次)</td><td>3 / 7</td><td>161 / 2459</td><td>6.5%</td><td>進階級：熟悉程式設計的邏輯概念，能以程式克服一般常見的問題。</td></tr></tbody></table><p><em>last updated 21/12/23 12:44</em></p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【題解】CSES - Weird Algorithm</title>
    <link href="/2021/12/20/CSES-Weird-Algorithm/"/>
    <url>/2021/12/20/CSES-Weird-Algorithm/</url>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/1068">題目</a></h2><p>Consider an algorithm that takes as input a positive integer n. If n is even, the algorithm divides it by two, and if n is odd, the algorithm multiplies it by three and adds one. The algorithm repeats this, until n is one. For example, the sequence for n=3 is as follows:<br>3→10→5→16→8→4→2→1</p><p>Your task is to simulate the execution of the algorithm for a given value of n.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The only input line has an integer n. </p><ul><li>1≤n≤10^6</li></ul><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print a line that contains all values of n during the algorithm.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>Input:<br>3</p><p>Output:<br>3 10 5 16 8 4 2 1</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//Author: jinlk</span><br><span class="hljs-comment">//https://cses.fi/problemset/task/1068/</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123; <br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n!=<span class="hljs-number">1</span>)<br>    &#123;<br>        cout&lt;&lt;n&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        <span class="hljs-keyword">if</span>(n%<span class="hljs-number">2</span>)<br>            n=(n*<span class="hljs-number">3</span>)+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span><br>            n/=<span class="hljs-number">2</span>;<br>    &#125;<br>    cout&lt;&lt;n;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>解題筆記</category>
      
      <category>CSES</category>
      
      <category>Introductory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【題解】CSES - Bit Strings</title>
    <link href="/2021/12/19/CSES-Bit-Strings/"/>
    <url>/2021/12/19/CSES-Bit-Strings/</url>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/1617">題目</a></h2><p>Your task is to calculate the number of bit strings of length n.</p><p>For example, if n=3, the correct answer is 8, because the possible bit strings are 000, 001, 010, 011, 100, 101, 110, and 111.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The only input line has an integer n. </p><ul><li>1≤n≤10^6</li></ul><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print the result modulo 10^9+7.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>Input:<br>3</p><p>Output:<br>8</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://cses.fi/problemset/task/1617</span><br><span class="hljs-comment">//Binary Exponentiation</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> m)</span> </span>&#123;<br>    a %= m;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">if</span> (b &amp; <span class="hljs-number">1</span>)<br>            res = res * a % m;<br>        a = a * a % m;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    cout&lt;&lt;<span class="hljs-built_in">binpow</span>(<span class="hljs-number">2</span>,n,<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>,<span class="hljs-number">9</span>)+<span class="hljs-number">7</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Binary-Exponentiation"><a href="#Binary-Exponentiation" class="headerlink" title="Binary Exponentiation"></a>Binary Exponentiation</h2><p><a href="https://cp-algorithms.com/algebra/binary-exp.html">CP-Algorithm連結</a><br>遞迴寫法</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> res = <span class="hljs-built_in">binpow</span>(a, b / <span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">if</span> (b % <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">return</span> res * res * a;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> res * res;<br>&#125;<br></code></pre></td></tr></table></figure><p>迴圈寫法</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">if</span> (b &amp; <span class="hljs-number">1</span>)<br>            res = res * a;<br>        a = a * a;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><p>Effective computation of large exponents modulo a number</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> m)</span> </span>&#123;<br>    a %= m;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">if</span> (b &amp; <span class="hljs-number">1</span>)<br>            res = res * a % m;<br>        a = a * a % m;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="10-9-7"><a href="#10-9-7" class="headerlink" title="10^9 + 7"></a>10^9 + 7</h2><p><a href="https://www.hackerearth.com/practice/notes/abhinav92003/why-output-the-answer-modulo-109-7/">Why “OUTPUT THE ANSWER MODULO 10^9 + 7”?</a></p>]]></content>
    
    
    <categories>
      
      <category>解題筆記</category>
      
      <category>CSES</category>
      
      <category>Introductory</category>
      
      <category>演算法</category>
      
      <category>Algebra</category>
      
      <category>Fundamentals</category>
      
      <category>Binary Exponentiation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSES</tag>
      
      <tag>Binary Exponentiation</tag>
      
      <tag>10^9 + 7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一個網站 [Hexo x Github Page] (待更)</title>
    <link href="/2021/12/19/first-website/"/>
    <url>/2021/12/19/first-website/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>從很久以前就有創自己網頁的想法，但總是因為覺得困難或麻煩而沒去研究，這次剛好有空閒時間，順手來研究一下，沒想到比想像中簡單，以下我會將我創建這個Blog的經歷從頭到尾寫下來，希望對第一次創Blog的夥伴能快速上手。</p><p>另外，創建這個Blog是<strong>完全免費</strong>的(包含自訂義網域)，也不需要信用卡，所以請大家安心食用 :)。</p><h1 id="認識Hexo"><a href="#認識Hexo" class="headerlink" title="認識Hexo"></a>認識Hexo</h1><h1 id="認識Github-Page"><a href="#認識Github-Page" class="headerlink" title="認識Github Page"></a>認識Github Page</h1><p><a href="https://github.com/">Github</a>為世界上最大的代碼存放網站和開源社群，而<strong>Github Page</strong>是GitHub提供的一個網頁代管服務，可以用於存放<strong>靜態網頁</strong>，例如:部落格、專案文件甚至整本書。一般GitHub Pages的網站使用github.io的子域名(username.github.io)，但是使用者也可以使用第三方域名。</p><p>基於Github的穩定性及不用付費，將個人Blog架設在Github Page是最方便快速的方法之一。</p><h2 id="創立Github-Page"><a href="#創立Github-Page" class="headerlink" title="創立Github Page"></a>創立Github Page</h2><h3 id="註冊Github"><a href="#註冊Github" class="headerlink" title="註冊Github"></a>註冊Github</h3><h3 id="建立Repository"><a href="#建立Repository" class="headerlink" title="建立Repository"></a>建立Repository</h3><h1 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h1><ul><li>21/12/17 - 研究Hexo</li><li>21/12/18 - 找到fluid主題</li><li>21/12/19 - 首次部署網站到github</li><li>21/12/21 - 自訂義網域jinlk.cf (免費)</li></ul><h1 id="來源"><a href="#來源" class="headerlink" title="來源"></a>來源</h1><ol><li><a href="https://zh.wikipedia.org/wiki/GitHub">Github - 維基百科</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>網站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
