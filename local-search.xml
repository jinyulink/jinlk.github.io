<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>轉系心得</title>
    <link href="/2022/08/05/transfercsie/"/>
    <url>/2022/08/05/transfercsie/</url>
    
    <content type="html"><![CDATA[<p>經過一年努力，總算如願以償，轉到資工系了，好開心。<br />說真的，一路以來，我覺得我很幸運，學測時，apcs組備取最後一個上的，到了大學後，上課都遇到分數給比較高的老師，讓我的成績單好看許多；也有同學帶我打比賽，得以學到許多以前沒碰過的知識，總之，希望能繼續努力，讓自己持續進步。</p><p>現階段目標: 考到駕照 / cpe六題 / icpc / cf rating 上1400 / 繼續更新網站 / 成績hold住 / 學學vue laravel / 看原子習慣</p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>轉系</tag>
      
      <tag>心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode 322 - Coin Change (一維dp)</title>
    <link href="/2022/08/05/leetcode322/"/>
    <url>/2022/08/05/leetcode322/</url>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/coin-change/">連結</a></p><h2 id="題目"><a class="markdownIt-Anchor" href="#題目"></a> 題目</h2><p>You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.</p><p>Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.</p><p>You may assume that you have an infinite number of each kind of coin.<br /><strong>Example 1:</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">Input:</span> coins = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>], amount = <span class="hljs-number">11</span><br><span class="hljs-symbol">Output:</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">Explanation:</span> <span class="hljs-number">11</span> = <span class="hljs-number">5</span> + <span class="hljs-number">5</span> + <span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">Input:</span> coins = [<span class="hljs-number">2</span>], amount = <span class="hljs-number">3</span><br><span class="hljs-symbol">Output:</span> <span class="hljs-number">-1</span><br></code></pre></div></td></tr></table></figure><p><strong>Example 3:</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">Input:</span> coins = [<span class="hljs-number">1</span>], amount = <span class="hljs-number">0</span><br><span class="hljs-symbol">Output:</span> <span class="hljs-number">0</span><br></code></pre></div></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li>1 &lt;= coins.length &lt;= 12</li><li>1 &lt;= coins[i] &lt;= 231 - 1</li><li>0 &lt;= amount &lt;= 104</li></ul><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> code</h2><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">coinChange</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; coins, <span class="hljs-keyword">int</span> amount)</span> </span>&#123;<br>        <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">dp</span><span class="hljs-params">(amount+<span class="hljs-number">1</span>,amount+<span class="hljs-number">1</span>)</span></span>;<br>        dp[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> coin:coins)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=coin;i&lt;=amount;i++)<br>            &#123;<br>                dp[i]=min(dp[i],dp[i-coin]+<span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> dp[amount]==amount+<span class="hljs-number">1</span>?<span class="hljs-number">-1</span>:dp[amount];<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>筆記</category>
      
      <category>Leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dp</tag>
      
      <tag>一維dp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++ - Vector (STL)</title>
    <link href="/2022/08/05/vector/"/>
    <url>/2022/08/05/vector/</url>
    
    <content type="html"><![CDATA[<div class="hljs code-wrapper"><pre class="highlight"><code class="C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(<span class="hljs-number">10</span>,<span class="hljs-number">0</span>)</span></span>; <span class="hljs-comment">//宣告一長度10 元素值皆為0的vector</span>    v.push_back(<span class="hljs-number">1</span>); <span class="hljs-comment">//將1插入vector的最後一個位置</span>    v.pop_back(); <span class="hljs-comment">//刪除vector的最後一個元素</span>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i : v) <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;    v.<span class="hljs-built_in">clear</span>(); <span class="hljs-comment">//清空vector</span>    sort(v.<span class="hljs-built_in">begin</span>(),v.<span class="hljs-built_in">end</span>()); <span class="hljs-comment">//將vector排序</span>    v.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">//取得vector的長度</span>    v.empty(); <span class="hljs-comment">//判斷vector是否為空 返回值為true或false</span>    <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">a</span><span class="hljs-params">(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)</span>,<span class="hljs-title">b</span><span class="hljs-params">(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)</span></span>; <span class="hljs-comment">//vector可以比大小(字典序)</span>    <span class="hljs-keyword">if</span>(a&gt;b) <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"a"</span>; <span class="hljs-comment">//印出"a"</span>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"b"</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>筆記</category>
      
      <category>STL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HP Codewars 2022 小心得</title>
    <link href="/2022/05/15/HP_codewars/"/>
    <url>/2022/05/15/HP_codewars/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>今年因為疫情原因，與以往不同，一隊只能一人(名額50個，官方說前三名可以到HP實習)，但也許是第一年舉辦大學場次的原因，獎品特別多(中獎率超過50%(當然如果你跟我一樣沒那個命的話 那還是不會中))，而且場地好豪華w。<br /><img src="https://lh3.googleusercontent.com/pw/AM-JKLW7uXmonA1BcGyKy673SAIFwTlWp_3utUJhg_vWC7mHaU8r87pVatcBntUy97I9-EhQcksWBjHNVgHxUSWTqAAVxPOzw9Upg8_KIHPKy5fR-9QCvtDJ7FNT2Gz2QZhHUxvYVycxAc8tPuD_IFu7p5kxSw=w1920-h865-no?authuser=0" alt="" /></p><h1 id="考前"><a class="markdownIt-Anchor" href="#考前"></a> 考前</h1><p>主辦單位有提供高級午餐盒、一芳飲料跟比賽衣服，還有大概半小時的有獎徵答(就是跟你講贊助商Intel、HP、HPE在做啥的，中間有HP的主管出來說歡迎大學生多來HP實習之類的事)<br /><img src="https://lh3.googleusercontent.com/pw/AM-JKLUGWTsz-GQbGSydSxTHS_KoN6TYDlpuZrPsd0awi1yf2W-gmF1WteTvc4bSkD2S0VC4ZZ6CtnSgCJfiBP2Cvkm5Jg8jF0rfosIIvMGgy8h4GnRtPuNf637wosgcBy3v2ImD44VTJ1yZ84xkwrn7tPPT0Q=w1920-h865-no?authuser=0" alt="" /><br /><img src="https://lh3.googleusercontent.com/pw/AM-JKLVVz6LKboaychICfYuq8Ht7CVKB9aqhI-3FzVYCB607z0PlHZ08GyvIMHC3eODWkIyNMFibGGR9jIi6OTaxtOZwQgmPG2pFIQ0YOY5ztbk2s55po-PMy5oo35VhzyBgAoIgLcuiGJskB90qF0JKpVsPEg=w1920-h865-no?authuser=0" alt="" /></p><h1 id="考試"><a class="markdownIt-Anchor" href="#考試"></a> 考試</h1><p>考試用的是Codewars自己的評分介面，這次題目總共15題，滿分300分，一題50分Hello World題目，其他我覺得整體比高中場次難些，這裡就不說我答幾題了…只是個菜機，但我覺得HP出的題目對C/C++的不友善w，很多輸入要處理很麻煩，不像codeforces那樣都不用管；另外，HP的題目基本上就只有題目敘述+一筆測資，不像一般看到的題目有時間限制、記憶體限制，提交後錯誤，也不會說是WA還是TLE。</p><h1 id="結語"><a class="markdownIt-Anchor" href="#結語"></a> 結語</h1><p>總之，能參加這次比賽還是挺高興的，主辦單位真的砸很多錢，而且只要填一個表單就能參加，很佛，希望明年還能再來!</p><p><em>last updated 22/05/15 21:53</em></p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Codewars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>做一個Youtube音樂電台 [24/7]</title>
    <link href="/2022/04/22/vps_247/"/>
    <url>/2022/04/22/vps_247/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>從三四年前開始，youtube上的24/7音樂電台雨後春筍般地出現，那時我就有想自己架設一個電台的想法，然而我的技術能力及硬體設備都不足，只好作罷。<br />最近因學校社團有幫我們弄DigitalOcean的充5美金送100美金，於是我就把這些Credits拿去架了一個Youtube電台，查了網上許多教學，這邊把學習歷程打成文章，參考參考。</p><p><strong>注意事項</strong>: 我原本是打算用OBS的，但後來發現OBS需要gpu才能運作，而這個虛擬機沒有gpu所以跑不了…，事故使用ffmpeg，如果你的虛擬機有gpu的話，可以直接裝OBS。</p><h1 id="硬體規格"><a class="markdownIt-Anchor" href="#硬體規格"></a> 硬體規格</h1><p>我這邊選用的是一般CPU的 4gb ram版本，一個月20美金，這樣的規格夠720p 24fps的直播，當然如果你希望有更高的解析度，就花多一點錢。<br /><img src="/img/photo_2022-03-07_15-52-55.jpg" alt="" /><br />我這樣實測下來，ram大概使用50%，流量每秒1.6mb。</p><h1 id="軟體"><a class="markdownIt-Anchor" href="#軟體"></a> 軟體</h1><h2 id="客戶端"><a class="markdownIt-Anchor" href="#客戶端"></a> 客戶端</h2><ol><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">Putty</a> - 用來連虛擬機的程式(當然如果你直接ssh也是可以)</li><li><a href="https://filezilla-project.org/download.php">FileZilla</a> - 將所要直播的背景影片上傳至虛擬機</li></ol><h2 id="虛擬機"><a class="markdownIt-Anchor" href="#虛擬機"></a> 虛擬機</h2><ol><li>Azuracast - DigitalOcean有內建一鍵安裝，裝好後去Azuracast頁面先註冊好帳號，然後操作基本設定。如果你不是使用DigitalOcean的話，需要自己安裝Azuracast。</li></ol><h1 id="步驟"><a class="markdownIt-Anchor" href="#步驟"></a> 步驟</h1><ol><li><p>[Azuracast] 進去Azuracast設定頁面將所有要撥放的音樂mp3檔案上傳至播放列表的Default。<br /><img src="/img/image_2022-03-07_15-10-35.png" alt="" /><br />上傳完音樂，並把音樂加入播放表後，可以至 <strong>個人資料</strong> &gt; <strong>廣播服務</strong> 按開始，現在去 <strong>公開頁面</strong> 就會看到電台開始運作了，</p></li><li><p>[Filezilla] 把背景影片檔案透過Filezilla上傳至虛擬機，記得將該檔案在虛擬機上的位置記下。<br />首先選擇左上角，新增一個站台。<br /><img src="/img/image_2022-03-07_15-14-16.png" alt="" /><br />選擇sftp，接著輸入你的虛擬機ip及使用者帳密。<br /><img src="/img/photo_2022-03-07_15-17-40.jpg" alt="" /></p></li><li><p>[虛擬機] 安裝ffmpeg (可以用obs的人可以不用ffmpeg)<br />用putty連線到虛擬機，在終端機輸入:</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo apt install ffmpeg<br></code></pre></div></td></tr></table></figure><ol start="4"><li>開始運行直播!<br />將下面的指令複製，把參數改成自己的:</li></ol><ul><li>KEY - youtube直播key</li><li>VIDEO_SOURCE - 背景影片在虛擬機上的位置</li><li>AUDIO_SOURCE - 音樂播放的位置(如果你用Azuracast的話，直接打http://localhost:8000/radio.mp3)</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-meta">#! /bin/bash</span><br><br>VBR=<span class="hljs-string">&quot;1500k&quot;</span><br>FPS=<span class="hljs-string">&quot;24&quot;</span><br>QUAL=<span class="hljs-string">&quot;superfast&quot;</span><br><br>YOUTUBE_URL=<span class="hljs-string">&quot;rtmp://a.rtmp.youtube.com/live2&quot;</span><br>KEY=<span class="hljs-string">&quot;你的Youtube直播key&quot;</span><br><br>VIDEO_SOURCE=<span class="hljs-string">&quot;背景影片檔案位置.mp4&quot;</span><br>AUDIO_SOURCE=<span class="hljs-string">&quot;http://localhost:8000/radio.mp3&quot;</span><br><br>ffmpeg \<br>    -re -f lavfi -i <span class="hljs-string">&quot;movie=filename=<span class="hljs-variable">$VIDEO_SOURCE</span>:loop=0, setpts=N/(FRAME_RATE*TB)&quot;</span> \<br>    -thread_queue_size 512 -i <span class="hljs-string">&quot;<span class="hljs-variable">$AUDIO_SOURCE</span>&quot;</span> \<br>    -map 0:v:0 -map 1:a:0 \<br>    -map_metadata:g 1:g \<br>    -vcodec libx264 -pix_fmt yuv420p -preset <span class="hljs-variable">$QUAL</span> -r <span class="hljs-variable">$FPS</span> -g $((<span class="hljs-variable">$FPS</span> * <span class="hljs-number">2</span>)) -b:v <span class="hljs-variable">$VBR</span> \<br>    -acodec libmp3lame -ar 44100 -threads 6 -qscale:v 3 -b:a 320000 -bufsize 512k \<br>    -f flv <span class="hljs-string">&quot;<span class="hljs-variable">$YOUTUBE_URL</span>/<span class="hljs-variable">$KEY</span>&quot;</span><br></code></pre></div></td></tr></table></figure><p>改好後，用putty連線到虛擬機，將整串指令複製起來，貼上終端機，按enter開始運行。<br />沒意外的話，直播就會開始了。<br /><img src="/img/photo_2022-03-07_15-26-30.jpg" alt="" /></p><h1 id="硬體使用量"><a class="markdownIt-Anchor" href="#硬體使用量"></a> 硬體使用量</h1><ol><li>CPU<br /><img src="/img/photo_2022-03-07_15-30-20.jpg" alt="" /></li><li>RAM<br /><img src="/img/photo_2022-03-07_15-31-21.jpg" alt="" /></li><li>Bandwidth<br /><img src="/img/photo_2022-03-07_15-31-56.jpg" alt="" /></li></ol><h1 id="參考資料"><a class="markdownIt-Anchor" href="#參考資料"></a> 參考資料</h1><ol><li><a href="https://okhlopkov.medium.com/how-to-create-your-24-7-youtube-online-radio-ca9e6834c192">How to create your 24/7 YouTube online radio</a> - Medium</li><li><a href="https://www.youtube.com/watch?v=9Jj0pVKRaOE">YouTube Live Stream from Free VPS without OBS</a> - Youtube</li></ol>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教學</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CS50筆記 Lecture 8 - HTML, CSS, JavaScript</title>
    <link href="/2022/02/21/cs50_frontend/"/>
    <url>/2022/02/21/cs50_frontend/</url>
    
    <content type="html"><![CDATA[<h1 id="internet"><a class="markdownIt-Anchor" href="#internet"></a> Internet</h1><p>Big storage: Cloud<br />A bunch of data we can all reach wirelessly.<br /><img src="/img/image_2022-02-21_21-40-01.png" alt="The ARPANET in 1969" /><br />Router: taken the data and decide to send it this way or that way.<br />How to send a packet , send it one router by router</p><h2 id="tcpip"><a class="markdownIt-Anchor" href="#tcpip"></a> TCP/IP</h2><p>IP: #.#.#.# (each # is 1-255(8 bits)), so it means that an IP address must use 32 bits or 4 bytes</p><p>IPv4: 32bits IPv6: 128bits(cuz there are too many devices nowadays) 128bits -&gt; crazy amounts of devices</p><h3 id="tcp"><a class="markdownIt-Anchor" href="#tcp"></a> TCP</h3><p>Transmission Control Protocol</p><h3 id="ip"><a class="markdownIt-Anchor" href="#ip"></a> IP</h3><h2 id="dns"><a class="markdownIt-Anchor" href="#dns"></a> DNS</h2><p>Domain Name Service (Translate domain name to ip address)</p><h2 id="http"><a class="markdownIt-Anchor" href="#http"></a> HTTP</h2><p>Hyper Text Transfer Protocol<br />A final protocol that web browsers use to communicate with servers.(Build on top of the Internet)</p><p>HTTPS: Secure HTTP</p><p>Format: <a href="https://jinlk.site/">https://jinlk.site/</a> (斜線指該網站的root資料夾 通常不顯示)</p><ul><li>jinlk.site : Domain name</li><li>www : a specific server in that domain (it is actually refer to lots of servers nowadays)</li><li>.site: top level domain (probably known .com .org .net .edu)</li></ul><h2 id="getpost"><a class="markdownIt-Anchor" href="#getpost"></a> GET/POST</h2><p>GET: Get data from the server</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>看起來像這樣 第一個<span class="hljs-string">&#x27;/&#x27;</span>代表檔案夾位置<br><span class="hljs-regexp">//</span> Request<br>GET <span class="hljs-regexp">/ HTTP/</span><span class="hljs-number">1.1</span><br>Host: jinlk.site<br></code></pre></div></td></tr></table></figure><p>現在很多網站託管服務像wix / wordpress, 他們其實只有一個大伺服器，當收到client的請求後 得知被詢問的url，就會去伺服器內尋找這個webpage然後回傳給client。</p><figure class="highlight sqf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sqf"><span class="hljs-comment">// Response</span><br>HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK<br>Content-<span class="hljs-built_in">Type</span>: <span class="hljs-built_in">text</span>/html <span class="hljs-comment">// 檔案形式</span><br></code></pre></div></td></tr></table></figure><ul><li>可以用Curl測試看看網址</li></ul><figure class="highlight armasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs armasm"><span class="hljs-symbol">curl</span> -I -X <span class="hljs-meta">GET</span> https:<span class="hljs-comment">//jinlk.site/</span><br></code></pre></div></td></tr></table></figure><ul><li>如果沒問題可以看到200</li><li>如果沒有該位置則404</li></ul><p><img src="/img/image_2022-02-21_22-49-45.png" alt="" /></p><p>POST: Send data to the server<br /><img src="/img/image_2022-02-21_22-33-02.png" alt="左client 右server" /></p><h1 id="front-end-language"><a class="markdownIt-Anchor" href="#front-end-language"></a> Front-end Language</h1><p>HTML: Hyper Text Markup Language<br />CSS: Cascading Style Sheets<br />Javascript: JavaScript</p><h2 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h2><p>Example: <a href="/2022/02/21/hello_example/">示範頁面</a></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> <br>            hello, world<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        This is under body tag.<br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>list 1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>list 2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Order list 1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Order list 2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header 1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header 2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Cell 1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Cell 1 info<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Cell 2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Cell 2 info<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;This is an image.(don&#x27;t need a close tag&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">/img/android.png</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">allowfullscreen</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.youtube.com/watch?v=F68sQYaS9XA&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br>        This is a Hyper link tag <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://jinlk.site/&quot;</span>&gt;</span>jinlk.site<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>usually body tag contain almost 90% of the content</li></ul><h2 id="css"><a class="markdownIt-Anchor" href="#css"></a> CSS</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>競程筆記</title>
    <link href="/2022/02/17/cpnote/"/>
    <url>/2022/02/17/cpnote/</url>
    
    <content type="html"><![CDATA[<h1 id="基本架構"><a class="markdownIt-Anchor" href="#基本架構"></a> 基本架構</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://jinlk.site</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IO cin.tie(0);ios_base::sync_with_stdio(false)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> vt vector</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> pb push_back</span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">50</span>;<br><span class="hljs-keyword">int</span> a[maxn];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>        IO;<br><span class="hljs-keyword">int</span> n;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) cin &gt;&gt; a[i];<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="方便加速程式"><a class="markdownIt-Anchor" href="#方便加速程式"></a> 方便/加速程式</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">//避免自動輸出緩衝區</span><br><br>ios_base::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>); <span class="hljs-comment">//c++跟c不混用</span><br><br>cout&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>; <span class="hljs-comment">//避免自動輸出緩衝區</span><br></code></pre></div></td></tr></table></figure><p><a href="https://hackmd.io/@wiwiho/CPN-io-optimization">I/O優化</a></p><h1 id="時間複雜度"><a class="markdownIt-Anchor" href="#時間複雜度"></a> 時間複雜度</h1><p>每秒10^8次</p><h1 id="前綴和差分"><a class="markdownIt-Anchor" href="#前綴和差分"></a> 前綴和&amp;差分</h1><ul><li>前綴和 <a href="https://oi-wiki.org/basic/prefix-sum/">oi-wiki</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">int</span> a[n+<span class="hljs-number">1</span>],sum[n+<span class="hljs-number">1</span>]; <span class="hljs-comment">//捨棄a[0]</span><br>    cin&gt;&gt;a[<span class="hljs-number">1</span>];<br>    sum[<span class="hljs-number">1</span>]=a[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;n+<span class="hljs-number">1</span>;i++)<br>    &#123;<br>        cin&gt;&gt;a[i];<br>        sum[i]=sum[i<span class="hljs-number">-1</span>]+a[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><ul><li>二维/多维前缀和</li></ul><p>一個二維陣列A:</p><figure class="highlight basic"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">5 </span><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span><br><span class="hljs-symbol">6 </span><span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">9</span><br></code></pre></div></td></tr></table></figure><p>其前缀和為:</p><figure class="highlight basic"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span> <span class="hljs-number">3</span>  <span class="hljs-number">7</span>  <span class="hljs-number">10</span><br><span class="hljs-symbol">6 </span> <span class="hljs-number">9</span>  <span class="hljs-number">15</span> <span class="hljs-number">22</span><br><span class="hljs-symbol">12 </span><span class="hljs-number">18</span> <span class="hljs-number">29</span> <span class="hljs-number">45</span><br></code></pre></div></td></tr></table></figure><p>範例程式碼:</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> a[<span class="hljs-number">103</span>][<span class="hljs-number">103</span>];<br><span class="hljs-keyword">int</span> b[<span class="hljs-number">103</span>][<span class="hljs-number">103</span>];  <span class="hljs-comment">// 前缀和数组，相当于上文的 sum[]</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-keyword">int</span> n, m;<br>  cin &gt;&gt; n &gt;&gt; m;<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br>      cin &gt;&gt; a[i][j];<br>      b[i][j] =<br>          b[i][j - <span class="hljs-number">1</span>] + b[i - <span class="hljs-number">1</span>][j] - b[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] + a[i][j];  <span class="hljs-comment">// 求前缀和</span><br>    &#125;<br>  &#125;<br></code></pre></div></td></tr></table></figure><p>例題: <a href="https://leetcode.com/problems/maximal-square/">leetcode Maximal Square</a><br />程式碼:</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://leetcode.com/problems/maximal-square/</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maximalSquare</span><span class="hljs-params">(vector&lt;vector&lt;<span class="hljs-keyword">char</span>&gt;&gt;&amp; matrix)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> n=matrix.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">//4</span><br>        <span class="hljs-keyword">int</span> m=matrix[<span class="hljs-number">0</span>].<span class="hljs-built_in">size</span>(); <span class="hljs-comment">//5</span><br>        vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt;  <span class="hljs-built_in">b</span>(n+<span class="hljs-number">1</span>,vector&lt;<span class="hljs-keyword">int</span>&gt;(m+<span class="hljs-number">1</span>,<span class="hljs-number">0</span>)); <span class="hljs-comment">//用來存前綴和</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>                b[i][j]=b[i][j<span class="hljs-number">-1</span>]+b[i<span class="hljs-number">-1</span>][j]-b[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+matrix[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>,l=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(l &lt;= <span class="hljs-built_in">min</span>(n, m))<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = l; i &lt;= n; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = l; j &lt;= m; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (b[i][j] - b[i - l][j] - b[i][j - l] + b[i - l][j - l] == l * l) <br>                        ans = <span class="hljs-built_in">max</span>(ans, l); <br>                &#125;<br>            &#125;<br>            l++;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans*ans;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure><h1 id="二分搜"><a class="markdownIt-Anchor" href="#二分搜"></a> 二分搜</h1><p><a href="https://oi-wiki.org/basic/binary/">oi wiki</a><br />是用来在一个有序数组中查找某一元素的算法，時間複雜度O(logn)算法每次都把查询的区间减半，所以对于一个长度为n的数组，至多会进行O(logn)次查找。</p><h1 id="stl"><a class="markdownIt-Anchor" href="#stl"></a> STL</h1><h2 id="vector"><a class="markdownIt-Anchor" href="#vector"></a> Vector</h2><p><a href="https://hackmd.io/@tonychi/rye6XcL6K#/1/2">PCCA寒訓</a></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br>vector&lt;<span class="hljs-keyword">int</span>&gt; v;<br> <br>v.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">// v 的長度</span><br>v.<span class="hljs-built_in">resize</span>(n); <span class="hljs-comment">// 調整大小為 n</span><br>v.<span class="hljs-built_in">clear</span>(); <span class="hljs-comment">// 初始化 v</span><br>v.<span class="hljs-built_in">push_back</span>(val); <span class="hljs-comment">// 放 val 在 v 後面</span><br>v.<span class="hljs-built_in">begin</span>(); v.<span class="hljs-built_in">end</span>(); <span class="hljs-comment">// v 的 iterator</span><br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(n, <span class="hljs-number">0</span>)</span></span>; <span class="hljs-comment">//宣告v 長度n 初始值0</span><br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">v.<span class="hljs-built_in">push_back</span>(val); <span class="hljs-comment">//把 val 的值複製進去</span><br>v.<span class="hljs-built_in">emplace_back</span>(val); <span class="hljs-comment">//把 val 做為參數來宣告</span><br><span class="hljs-comment">//速度上幾乎沒差 除非你 push_back() 一個很大的東西</span><br><br><span class="hljs-comment">// emplace_back() 的好處在於它可以減少「宣告」的繁瑣</span><br>vector&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt; &gt; arr;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    arr.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>)); <br>        <span class="hljs-comment">// 要先產生 pair 才可以被複製</span><br>    <br>    arr.<span class="hljs-built_in">emplace_back</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>);<br>        <span class="hljs-comment">// 簡潔許多</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">v.<span class="hljs-built_in">resize</span>(n); <span class="hljs-comment">//把 v 長度設為 n</span><br>v.<span class="hljs-built_in">resize</span>(n, <span class="hljs-number">0</span>); <span class="hljs-comment">//如果 v 需要增加長度，值會是 0已存在的值不會被改變！！</span><br>v.<span class="hljs-built_in">assign</span>(n, <span class="hljs-number">0</span>); <span class="hljs-comment">//把 v 初始化成長度為 n且值為 0</span><br></code></pre></div></td></tr></table></figure><p>請不要用 erase(), insert()，vector 是連續儲存的，所以移除或插入在中間會需要 O(n)的時間。</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//iterator</span><br>v.<span class="hljs-built_in">begin</span>(); <span class="hljs-comment">//回傳指向第 0 個的 iterator</span><br>v.<span class="hljs-built_in">end</span>(); <span class="hljs-comment">//回傳指向最後一項的下一項的 iterator</span><br><span class="hljs-comment">//所以 v.begin() 到 v.end() 是左閉右開</span><br><br>v.<span class="hljs-built_in">rbegin</span>(); <span class="hljs-comment">//回傳指向最後一項的 iterator</span><br>v.<span class="hljs-built_in">rend</span>(); <span class="hljs-comment">//回傳指向第 0 項的前一項的 iterator</span><br><br><span class="hljs-comment">//迴圈</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(<span class="hljs-number">10</span>)</span></span>;<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> &amp;i: v) cin &gt;&gt; i; <span class="hljs-comment">// 輸入 10 個東西到 v</span><br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> it = v.<span class="hljs-built_in">begin</span>(); it != v.<span class="hljs-built_in">end</span>(); ++it) &#123;<br>        cout &lt;&lt; *it &lt;&lt; <span class="hljs-string">&#x27;\n&#x27;</span>; <span class="hljs-comment">// 記得加 * 在變數前面來取值</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="binary-exponentiation"><a class="markdownIt-Anchor" href="#binary-exponentiation"></a> Binary Exponentiation</h1><ul><li>例題: <a href="//https://codeforces.com/problemset/problem/630/I">codeforces 630 I</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinyulink</span><br><span class="hljs-comment">//https://codeforces.com/problemset/problem/630/I</span><br><span class="hljs-comment">//Binary Exponentiation</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">if</span> (b &amp; <span class="hljs-number">1</span>)<br>            res = res * a;<br>        a = a * a;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> res=<span class="hljs-number">24</span>*<span class="hljs-built_in">binpow</span>(<span class="hljs-number">4</span>,n<span class="hljs-number">-3</span>)+(n<span class="hljs-number">-3</span>)*<span class="hljs-number">36</span>*<span class="hljs-built_in">binpow</span>(<span class="hljs-number">4</span>,n<span class="hljs-number">-4</span>);<br>    cout&lt;&lt;res;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><ul><li>例題: <a href="https://cses.fi/problemset/task/1617">CSES Bit Strings</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://cses.fi/problemset/task/1617</span><br><span class="hljs-comment">//Binary Exponentiation</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">binpow</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> m)</span> </span>&#123;<br>    a %= m;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">if</span> (b &amp; <span class="hljs-number">1</span>)<br>            res = res * a % m;<br>        a = a * a % m;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    cout&lt;&lt;<span class="hljs-built_in">binpow</span>(<span class="hljs-number">2</span>,n,<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>,<span class="hljs-number">9</span>)+<span class="hljs-number">7</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="sieve-of-eratosthenes找質數"><a class="markdownIt-Anchor" href="#sieve-of-eratosthenes找質數"></a> Sieve of Eratosthenes(找質數)</h1><ul><li>例題: <a href="https://codeforces.com/problemset/problem/230/B">Codeforces 230 B</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinyulink</span><br><span class="hljs-comment">//https://codeforces.com/problemset/problem/230/B</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> a[<span class="hljs-number">1000000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">prime_check</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>;<span class="hljs-comment">//Seive of Eratosthenes 判斷質數 a[x]=0的話 n就是質數</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-built_in">prime_check</span>();<br>    <span class="hljs-keyword">while</span>(n--) <br>    &#123;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> x;<br>        cin&gt;&gt;x;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> s=<span class="hljs-built_in">sqrt</span>(x); <span class="hljs-comment">// sqrt </span><br>        <span class="hljs-keyword">if</span>((s*s)==x&amp;&amp;x!=<span class="hljs-number">1</span>&amp;&amp;!a[s])<br>            cout&lt;&lt;<span class="hljs-string">&quot;YES\n&quot;</span>;<br>        <span class="hljs-keyword">else</span><br>            cout&lt;&lt;<span class="hljs-string">&quot;NO\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">prime_check</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">1000000</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">2</span>;i*j&lt;=<span class="hljs-number">1000000</span>;j++)<br>                a[i*j]=<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="disjoint-set-union"><a class="markdownIt-Anchor" href="#disjoint-set-union"></a> Disjoint Set Union</h1><ul><li>例題: <a href="https://codeforces.com/problemset/problem/1609/D">Codeforces 1609 D</a></li></ul><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://codeforces.com/problemset/problem/1609/D</span><br><span class="hljs-comment">//Disjoint Set Union DSU https://cp-algorithms.com/data_structures/disjoint_set_union.html</span><br><span class="hljs-comment">//NCTU PCCA 寒訓 https://www.youtube.com/watch?v=8dsEw2ndqCI</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IO ios_base::sync_with_stdio(0);cin.tie(0)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> vt vector</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> pb push_back</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> n,d,t=<span class="hljs-number">0</span>;<br>vt&lt;<span class="hljs-keyword">int</span>&gt; parent,sz;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find_set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> v)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(v==parent[v])    <span class="hljs-keyword">return</span> v;<br>    <span class="hljs-keyword">return</span> parent[v]=<span class="hljs-built_in">find_set</span>(parent[v]); <span class="hljs-comment">//path compression</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">union_sets</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    a=<span class="hljs-built_in">find_set</span>(a);<br>    b=<span class="hljs-built_in">find_set</span>(b);<br>    <span class="hljs-keyword">if</span>(a!=b)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(sz[a]&lt;sz[b]) <span class="hljs-built_in">swap</span>(a,b); <span class="hljs-comment">//啟發式合併</span><br>        parent[b]=a;<br>        sz[a]+=sz[b];<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    IO,cin&gt;&gt;n&gt;&gt;d;<br>    parent.<span class="hljs-built_in">resize</span>(n);<br>    sz.<span class="hljs-built_in">resize</span>(n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)    parent[i]=i,sz[i]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;d;i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> x,y,ans=<span class="hljs-number">0</span>;<br>        cin&gt;&gt;x&gt;&gt;y;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">find_set</span>(x<span class="hljs-number">-1</span>)==<span class="hljs-built_in">find_set</span>(y<span class="hljs-number">-1</span>))    t++; <span class="hljs-comment">//檢查是否在同一集合</span><br>        <span class="hljs-keyword">else</span>    <span class="hljs-built_in">union_sets</span>(x<span class="hljs-number">-1</span>,y<span class="hljs-number">-1</span>);<br>        vt&lt;<span class="hljs-keyword">int</span>&gt; tmp;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)    <span class="hljs-keyword">if</span>(parent[i]==i)    tmp.<span class="hljs-built_in">pb</span>(sz[i]);<br>        <span class="hljs-built_in">sort</span>(tmp.<span class="hljs-built_in">rbegin</span>(),tmp.<span class="hljs-built_in">rend</span>());<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;t+<span class="hljs-number">1</span>;i++)    ans+=tmp[i];<br>        cout&lt;&lt;ans<span class="hljs-number">-1</span>&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="dynamic-programming"><a class="markdownIt-Anchor" href="#dynamic-programming"></a> Dynamic Programming</h1><h2 id="lis-longest-increasing-subsequence"><a class="markdownIt-Anchor" href="#lis-longest-increasing-subsequence"></a> LIS (Longest Increasing Subsequence)</h2><p>最长<strong>连续</strong>不下降子序列，因为是连续的，所以只要与上一个元素进行比较即可:</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><br><span class="hljs-comment">// C++ Version</span><br><span class="hljs-keyword">int</span> a[MAXN];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dp</span><span class="hljs-params">()</span> </span>&#123;<br>  <span class="hljs-keyword">int</span> now = <span class="hljs-number">1</span>, ans = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++) &#123;<br>    <span class="hljs-keyword">if</span> (a[i] &gt;= a[i - <span class="hljs-number">1</span>])<br>      now++;<br>    <span class="hljs-keyword">else</span><br>      now = <span class="hljs-number">1</span>;<br>    ans = <span class="hljs-built_in">max</span>(now, ans);<br>  &#125;<br>  <span class="hljs-keyword">return</span> ans;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CPE體驗心得</title>
    <link href="/2021/12/22/CPE-first-time/"/>
    <url>/2021/12/22/CPE-first-time/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>CPE類似於大學版的APCS，並且都是免費的(讚)。由於是第一次考，經驗不多，把試場一些注意事項寫下來，解題部分看看就好，比我強的人大有人在，也歡迎大老在底下留言，交流交流。</p><h1 id="考前"><a class="markdownIt-Anchor" href="#考前"></a> 考前</h1><p>高中有打C++解題的經歷，所以對基本語法還算OK，不過沒什麼演算法基礎。考前幾週有去codeforces打了兩場比賽跟開始做CPE官網列出的<a href="https://cpe.cse.nsysu.edu.tw/environment.php">一顆星題(共49題)</a>，不過我沒有每題都打完(懶)，大概看了三十幾題就來考了。</p><h1 id="考試"><a class="markdownIt-Anchor" href="#考試"></a> 考試</h1><p>考場就是學校資工系的電腦教室，座位隨便坐，前面有快一個小時的時間給你測試系統，建議要考的人先在家自己熟悉一下，不要像我一開始不熟悉緊張得要死…，CPE是採用<a href="http://coding-frenzy.arping.me/">瘋狂程設</a>這套軟體(介面十分古老)。<br />考試可以帶筆，用試場提供的規則紙張當計算紙。</p><h2 id="考試介面"><a class="markdownIt-Anchor" href="#考試介面"></a> 考試介面</h2><p>介面很簡單，分成上─題目、中─Code、下─輸出，右邊有編譯後的狀態 (AC, TLE, WA 等)、Compiler 訊息、input/output 資料，此外，系統有英漢字典跟<strong>C/C++參考資料</strong>可以查，挺佛心的，同時可以看到即時排名，包含教室排名(你所在考場的排名)及全國排名，但排名有時會出現教室排名更新了，全國的卻還沒更新的情況，請已教室排名顯示的解題紀錄為主，因為全國考場會每五分鐘傳一次資料到中山大學伺服器(CPE主辦單位)，難免會有塞車情形，可以過個再五分鐘按f5刷新。</p><p>此外，題目會有兩種按鈕，<strong>看題</strong>跟<strong>解題</strong>，可以先把題目看完後，再按解題開始code，看題時間不會記錄到解題時間內。</p><p><img src="/img/%E7%98%8B%E7%8B%82.png" alt="瘋狂程設介面" /></p><h2 id="第一次考試"><a class="markdownIt-Anchor" href="#第一次考試"></a> 第一次考試</h2><p><a href="https://cpe.cse.nsysu.edu.tw/cpe/test_data/2021-12-21">題目</a></p><ol><li><p>[x] 點開第一題，大概想了五分鐘，先把大概的程式碼寫在紙上後，按下解題，開始code，幸運的思路沒錯，不用修改code就拿到第一個<font color=#4DC44B>AC</font>，不過美好的開始不代表會一直美好下去…</p></li><li><p>[x] 第二題想了大概二十分鐘吧，原本以為只有質數有可能為解，打算用<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95">Sieve of Eratosthenes</a>判斷質數後，判斷答案，仔細想了想才發現不一定，最後用基於<strong>Sieve of Eratosthenes</strong>的方法修改了一下思路，最後總共花了36分鐘拿到<font color=#4DC44B>AC</font>。</p></li><li><p>[x] 接下來由於看到第三題感覺比較複雜，就先跳到第四題了，大概花了十幾分鐘，用了雙層迴圈拿到<font color=#4DC44B>AC</font>，但這方法似乎沒有很好。</p></li></ol><ul><li>目前為止對我來說都還挺順利，但接下來…</li></ul><ol start="4"><li><p>第三題我印象深刻(<a href="https://zerojudge.tw/ShowProblem?problemid=c082">UVA00118</a>)，機器人走路這題搞了我快兩小時…，慢慢手刻每一行Code，當我還在尋思程式哪裡出錯時，考試最後十分鐘，我才發現我搞錯題意了…，但為時已晚…</p></li><li><p>5-7題還不敢碰，演算法沒什麼基礎Σ(lliдﾟﾉ)ﾉ</p></li></ol><p>第一次考CPE拿下三題，符合我的預期，但很嘔的是原本如果仔細看題目，應該能拿到四題的說…，總之打算明年三月再去考一次，這段期間希望自己多刷一些題跟學演算法吧!</p><h2 id="第二次考試"><a class="markdownIt-Anchor" href="#第二次考試"></a> 第二次考試</h2><p><a href="https://cpe.cse.nsysu.edu.tw/cpe/test_data/2022-03-22">題目</a></p><p>第二次去考沒花太多時間準備(學業好忙Σ(lliдﾟﾉ)ﾉ)，只有在幾個禮拜前把常見資料結構在熟悉一下而已，前面一個半小時解出前四題，個人感覺這次似乎友善一點(?，我看計分板好多人都是四題;最後的時間都在想第六題ww，有找出題目的規律，我用vector去做，結果最後跑到vector爆掉，存不下東西…，顯然不能像我這樣做，我的程式跑人工測資要跑7秒lol…，anyway 至少有進步一題(還是好菜… 認識有資工系大一就七題… 😬 下一次再看情況要不要考，偶爾去燒個腦袋好像也不錯(誤</p><h3 id="成績紀錄"><a class="markdownIt-Anchor" href="#成績紀錄"></a> 成績紀錄</h3><table><thead><tr><th>考試日期</th><th>解題數</th><th>排名</th><th>排名比例</th><th>評等</th></tr></thead><tbody><tr><td>2021-12-21 (第一次)</td><td>3 / 7</td><td>161 / 2459</td><td>6.5%</td><td>進階級：熟悉程式設計的邏輯概念，能以程式克服一般常見的問題。</td></tr><tr><td>2021-03-22 (第二次)</td><td>4 / 7</td><td>118 / 2561</td><td>4.6%</td><td>專業級：熟悉各種基礎的演算法、資料結構，並具有良好的程式編寫能力。</td></tr></tbody></table><p><em>last updated 22/03/26 11:42</em></p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 Hexo + Github 架設自己的第一個網站</title>
    <link href="/2021/12/19/first-website/"/>
    <url>/2021/12/19/first-website/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>從很久以前就有創自己靜態網頁的想法，但總是因為覺得困難或麻煩而沒去研究，這次剛好有空閒時間，就來研究一下。</p><p>雖然網路上已經有很多相關文章了，但這邊還是將過程記錄下來打成文章。</p><h1 id="為何hexo-x-github"><a class="markdownIt-Anchor" href="#為何hexo-x-github"></a> 為何Hexo x Github</h1><p>Hexo官網寫著<strong>快速、簡單且強大的網誌框架</strong>，而也確實如此，全自動部署，簡潔、輕便，主題樣式及美觀我認為比競爭者Hugo好上不少，學會一些常用指令就能上手了，即便前端零基礎。</p><p>Github好處就是免費、架站快速、穩定，後期也可以自訂網域，當然有些限制:</p><ul><li>網站大小 &lt; 1GB</li><li>流量限制 &lt; 100GB/月</li><li>建置次數 &lt; 10次/時</li></ul><p>但作為一個自己的靜態部落格，應該還夠用。</p><h1 id="開始建置環境"><a class="markdownIt-Anchor" href="#開始建置環境"></a> 開始建置環境</h1><p>需安裝/註冊的東西:</p><ul><li>Node.js</li><li>Git</li><li>Hexo</li><li>註冊Github帳號</li><li>一個存放網站檔案的資料夾</li></ul><h2 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Node.js</h2><p>提供使用 npm 來安裝套件。<br />下面去<a href="https://nodejs.org/en/">Node.js</a>官網，點擊左邊穩定版本下載即可。<br /><img src="/img/nodejs.png" alt="Node.js官網下載" /></p><h2 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h2><p>用來取得Github的檔案及將檔案發佈到Github。<br /><img src="/img/git.jpg" alt="Git官網下載" /></p><h2 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> Hexo</h2><p>完成上述兩個安裝後，就可以安裝Hexo了。</p><p>在這裡，我在桌面新創建一個First-website的資料夾做示範。<br /><img src="/img/image_2022-02-08_23-06-53.png" alt="新增資料夾" /></p><p>打開終端機，cd到剛剛創建的資料夾</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> Desktop\First-website<br></code></pre></div></td></tr></table></figure><p>接著輸入安裝指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-cli -g (mac可能需要sudo)<br></code></pre></div></td></tr></table></figure><p>接著，輸入初始化指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo init<br></code></pre></div></td></tr></table></figure><p>安裝所需檔案:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install<br></code></pre></div></td></tr></table></figure><p>接著會在所在資料夾看到以下檔案，如果有的話，目前為止都是對的。<br /><img src="/img/file.png" alt="檢查資料夾是否有這些檔案" /></p><p>這個時候，在黑窗輸入:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo server<br></code></pre></div></td></tr></table></figure><p>如果黑窗跳出這段訊息:<br /><img src="/img/hexos.png" alt="" /></p><p>去瀏覽器訪問http://localhost:4000/ 就會看到你目前已經建置好一個網頁了!<br /><img src="/img/landscape.jpg" alt="" /></p><h1 id="認識github-page"><a class="markdownIt-Anchor" href="#認識github-page"></a> 認識Github Page</h1><p><a href="https://github.com/">Github</a>為世界上最大的代碼存放網站和開源社群，而<strong>Github Page</strong>是GitHub提供的一個網頁代管服務，可以用於存放<strong>靜態網頁</strong>，例如:部落格、專案文件甚至整本書。一般GitHub Pages的網站使用github.io的子域名(<a href="http://username.github.io">username.github.io</a>)，但是使用者也可以使用第三方域名。</p><p>基於Github的穩定性及不用付費，將個人Blog架設在Github Page是最方便快速的方法之一。</p><h2 id="創立github-page"><a class="markdownIt-Anchor" href="#創立github-page"></a> 創立Github Page</h2><p>如果還沒有github帳號的，自己去註冊一個然後登入，這邊我就不講解了。</p><h3 id="建立repository"><a class="markdownIt-Anchor" href="#建立repository"></a> 建立Repository</h3><p>在github左上角，點new 新增一個repository。<br /><img src="/img/image_2022-02-08_23-15-44.png" alt="新增repo" /></p><p>repo名稱輸入[<a href="http://xn--username-im2mg83jo57cy0yb.github.io">你的帳號username.github.io</a>]<br /><img src="/img/image_2022-02-08_23-17-27.png" alt="" /></p><p>建立完後，username.github.io就是你的網域了。</p><h3 id="將網站部屬至github"><a class="markdownIt-Anchor" href="#將網站部屬至github"></a> 將網站部屬至github</h3><ol><li>首先要安裝hexo的git插件，在終端輸入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></div></td></tr></table></figure><ol start="2"><li>接著需要修改_config.yml檔案(\Desktop\First-website_config.yml)的deploy設定。</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/username/username.github.io.git<br>  branch: master<br></code></pre></div></td></tr></table></figure><ul><li>type: 部屬方式，這裡選擇git</li><li>repo: repository的網址</li><li>branch: 部屬分支，這裡選擇master</li></ul><ol start="3"><li>部屬</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo deploy<br></code></pre></div></td></tr></table></figure><p>第一次部屬會要求登入github帳號。<br />部屬後，過個幾分鐘去你的網域看就能看到你的網站了，而到這基本上就完成網站架設了。</p><h1 id="常用指令"><a class="markdownIt-Anchor" href="#常用指令"></a> 常用指令</h1><ul><li>新增文章</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new [layout] &lt;title&gt;<br></code></pre></div></td></tr></table></figure><ul><li>清除靜態檔案</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean (可簡寫 cl)<br></code></pre></div></td></tr></table></figure><ul><li>產生靜態檔案</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo generate (可簡寫 g)<br></code></pre></div></td></tr></table></figure><ul><li>本地端運行</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo server (可簡寫 s)<br></code></pre></div></td></tr></table></figure><p>更改文章後，可先在本地端運行看看。</p><p>一般來說，每次更新文章要重新佈署時，會打以下指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo cl<br>hexo g -d<br></code></pre></div></td></tr></table></figure><h1 id="結語"><a class="markdownIt-Anchor" href="#結語"></a> 結語</h1><p>實際使用到現在，hexo真的十分方便，指令不複雜，而且也有許多主題及插件可以使用。這算是我的第一篇文章，有打錯地方還請提醒，以後再慢慢豐富自己網站，</p><h2 id="參考文章"><a class="markdownIt-Anchor" href="#參考文章"></a> 參考文章</h2><ul><li><a href="https://hackmd.io/@Heidi-Liu/note-hexo-github">【學習筆記】如何使用 Hexo + GitHub Pages 架設個人網誌</a></li><li><a href="https://israynotarray.com/hexo/20190411/932826160/">架設 Hexo+GitHub</a></li></ul><p><em>last updated 22/02/08 23:52</em></p>]]></content>
    
    
    <categories>
      
      <category>網站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>photos</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<center>！相册描述【此行可删除】</center><center>自定义分隔符【此行可删除】</center><div class="gallery-page"><div class="gallery-list"><div class="gallery-column"><div class="gallery-item"><a href="【！相册文件夹名】"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- 台北 -</p></div><div class="gallery-item"><a href="【！相册文件夹名】"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- ！相册2 -</p></div></div><div class="gallery-column"><div class="gallery-item"><a href="sample"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- 相册名 -</p></div></div><div class="gallery-column"><div class="gallery-item"><a href="sample"><img src="img/sample.jpg"></a><p>- 相册名 -</p></div></div></div></div></div><center>自定义分割线【此行可删除】</center>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>關於</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<div name="我是墙" id="recent-posts">  <!-- id=>type  recent-posts=>name    -->  <div name="我是画框">    <div name="我是纸">      <!--这里通过js挂载githubcalendar，也就是画画-->    </div>  </div></div><h3 id="嗨我是jin"><a class="markdownIt-Anchor" href="#嗨我是jin"></a> 嗨👋，我是Jin。</h3><h3 id="我是一名學生在資訊道路上持續學習中歡迎一同交流"><a class="markdownIt-Anchor" href="#我是一名學生在資訊道路上持續學習中歡迎一同交流"></a> 我是一名學生，在資訊道路上持續學習中，歡迎一同交流!</h3><p>這個網站主要目的在於: 記錄我的學習筆記及一些心得，文章都是非常主觀的，如有錯誤請不吝指教。</p><h2 id="過去曾使用過的程式-軟體-技術-設備"><a class="markdownIt-Anchor" href="#過去曾使用過的程式-軟體-技術-設備"></a> 💻過去(曾)使用過的程式、軟體、技術、設備</h2><ul><li><img src="https://img.shields.io/badge/C-A8B9CC?style=for-the-badge&logo=c&logoColor=white">     <img src="https://img.shields.io/badge/C++-blue?style=for-the-badge&logo=c%2B%2B&logoColor=white">    <img src="https://img.shields.io/badge/Python-c2BC44?style=for-the-badge&logo=python&logoColor=white">    <img src="https://img.shields.io/badge/Javascript-yellow?style=for-the-badge&logo=javascript&logoColor=white">   <img src="https://img.shields.io/badge/Java-007396?style=for-the-badge&logo=Java&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/VS code-blue?style=for-the-badge&logo=VisualStudioCode&logoColor=ffffff">  <img src="https://img.shields.io/badge/Virtual Box-183A61?style=for-the-badge&logo=VirtualBox&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/Cloudflare-F38020?style=for-the-badge&logo=Cloudflare&logoColor=ffffff"> <img src="https://img.shields.io/badge/jsDelivr-E84D3D?style=for-the-badge&logo=jsDelivr&logoColor=ffffff"> <img src="https://img.shields.io/badge/git-F05032?style=for-the-badge&logo=git&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/Windows-11-2376bc?style=for-the-badge&logo=windows&logoColor=ffffff">  <img src="https://img.shields.io/badge/Ubuntu-18.04-E95420?style=for-the-badge&logo=ubuntu&logoColor=ffffff"></li></ul><h2 id="技能點"><a class="markdownIt-Anchor" href="#技能點"></a> 📷技能點</h2><ul><li><img src="https://img.shields.io/badge/Photoshop-31A8FF?style=for-the-badge&logo=AdobePhotoshop&logoColor=ffffff">  <img src="https://img.shields.io/badge/Premiere Pro-9999FF?style=for-the-badge&logo=AdobePremierePro&logoColor=ffffff"></li></ul><h2 id="技能點-2"><a class="markdownIt-Anchor" href="#技能點-2"></a> 🎮技能點</h2><ul><li><img src="https://img.shields.io/badge/Minecraft-62B47A?style=for-the-badge&logo=Minecraft&logoColor=ffffff">  <img src="https://img.shields.io/badge/Valorant-red?style=for-the-badge&logo=Velog&logoColor=ffffff"></li></ul><h2 id="16pf"><a class="markdownIt-Anchor" href="#16pf"></a> 16PF</h2><details>    <summary>結果分析圖</summary>      <img src="/img/photo_2022-03-29_00-05-20.jpg"></details><details>    <summary>“提倡者” 人格</summary>      提倡者人格类型的人非常稀少，只有不到 1% 的人口属于这种类型。具有与生俱来的理想主义和道德感，但真正令他们与其他理想主义人格类型区分开来的是，他们果断决绝。他们的同事和朋友把他们当作安静的外向类型是不无道理的，但他们要知道“提倡者”们需要独处的时间来养精蓄锐，所以对他们的突然离开不要太过惊讶。 “提倡者”们很在乎别人的感受，也希望被以同样的方式对待 — 这有时需要给他们留几天独处的时间。</details><p>本部落格創建於2021/12/19，目前還在陸續加入一些插件，完善部落格功能，本人盡量在學習之虞多發些文章，也喜歡多與志同道合的夥伴們交流，歡迎加友鏈!</p><p><a href="/2021/01/26/diary/">日誌</a></p><script type="text/javascript" src="//rf.revolvermaps.com/0/0/8.js?i=5sbh3ssy88n&amp;m=7&amp;c=ff0000&amp;cr1=ffffff&amp;f=arial&amp;l=33&amp;bv=45" async="async"></script>]]></content>
    
  </entry>
  
  
  
</search>
