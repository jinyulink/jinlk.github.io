<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>程設期末作業</title>
    <link href="/2022/01/02/Homework2/"/>
    <url>/2022/01/02/Homework2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> ============================================================================</span><br><span class="hljs-comment"> Author      : Jinlk 林晉宇 110403518</span><br><span class="hljs-comment"> Description : 作業二</span><br><span class="hljs-comment"> # comments * 10pt</span><br><span class="hljs-comment"> ============================================================================</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta"># <span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">shuffle</span><span class="hljs-params">(<span class="hljs-keyword">short</span> [][<span class="hljs-number">2</span>])</span></span>;<span class="hljs-comment">/*TODO 2*/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printCardAndPoint</span><span class="hljs-params">(<span class="hljs-keyword">short</span> [][<span class="hljs-number">2</span>],<span class="hljs-keyword">short</span> n_card)</span></span>;<span class="hljs-comment">/*TODO 6*/</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calculatePoint</span><span class="hljs-params">(<span class="hljs-keyword">short</span> [][<span class="hljs-number">2</span>],<span class="hljs-keyword">short</span> n_card)</span></span>;<span class="hljs-comment">/*TODO 7*/</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br><span class="hljs-built_in">srand</span>(<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>)); <span class="hljs-comment">/*set random seed*/</span><br><span class="hljs-keyword">char</span> user[<span class="hljs-number">10</span>];<br><span class="hljs-keyword">int</span> money=<span class="hljs-number">1000</span>; <span class="hljs-comment">/*the initial money user has*/</span><br><span class="hljs-keyword">short</span> cards[<span class="hljs-number">52</span>][<span class="hljs-number">2</span>];<br><span class="hljs-comment">/*TODO 1: Edit next line, generate cards array</span><br><span class="hljs-comment">* Rows: each cards, Columns: Suit, Rank</span><br><span class="hljs-comment"> * set club as 1, diamond as 2, heart as 3, spade as 4</span><br><span class="hljs-comment"> * set rank as 1~13, stand for A, 2, 3, ...., 10, J, Q, K</span><br><span class="hljs-comment"> * Hint: for 10pt*/</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">52</span>;i++)<br>&#123;<br>cards[i][<span class="hljs-number">0</span>]=i/<span class="hljs-number">13</span>+<span class="hljs-number">1</span>; <span class="hljs-comment">//suit</span><br>cards[i][<span class="hljs-number">1</span>]=i%<span class="hljs-number">13</span>+<span class="hljs-number">1</span>; <span class="hljs-comment">//rank</span><br>&#125;<br><span class="hljs-comment">/*TODO 1 end*/</span><br><br>  <span class="hljs-comment">/*TODO 2: implement shuffle function that can shuffle cards</span><br><span class="hljs-comment">* Rows: each cards, Columns: Suit, Rank</span><br><span class="hljs-comment"> * Hint: for 10pt*/</span><br> <span class="hljs-built_in">shuffle</span>(cards); <span class="hljs-comment">/*Don&#x27;t edit this line, please complete the shuffle function (at the bottom of the code)*/</span><br><span class="hljs-comment">/*TODO 2 end*/</span><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Please enter your identification (string):&quot;</span>);<br><span class="hljs-comment">/*TODO 3: Edit next line, let user input her/his name, save the input to char array (string) user </span><br><span class="hljs-comment"> * Hint: gets 10pt*/</span><br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,user); <span class="hljs-comment">//input user&#x27;s name</span><br><span class="hljs-comment">/*TODO 3 end*/</span><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nHow many money you want to bet:&quot;</span>);<br><span class="hljs-keyword">int</span> bet;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;bet);<br><br><span class="hljs-comment">/*TODO 4: Edit next line, print user&#x27;s name and the user&#x27;s total money, and the money user bet</span><br><span class="hljs-comment"> * Hint: printf 10pt*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nUser&#x27;s name: %s, total money %d, bet %d dollars\n&quot;</span>,user,money,bet); <span class="hljs-comment">//print initial info</span><br><span class="hljs-comment">/*TODO 4 end*/</span><br><br><span class="hljs-keyword">int</span> card_sequence=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">short</span> banker_card_close[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>], banker_card_open[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>];<br><span class="hljs-keyword">short</span> user_cards[<span class="hljs-number">10</span>][<span class="hljs-number">2</span>];<br><br><br><br><span class="hljs-comment">/*TODO 5: Edit next part, distribute card (in sequence) to banker and user</span><br><span class="hljs-comment"> * In this stage, Banker has two cards, </span><br><span class="hljs-comment"> * one open card (in banker_card_open[10][2], already distributed below), </span><br><span class="hljs-comment"> * one close card (in banker_card_close[2], please finish below)</span><br><span class="hljs-comment"> * User has two cards (in user_cards[10][2], please finish below)</span><br><span class="hljs-comment"> * Rows: each cards, Columns: Suit, Rank</span><br><span class="hljs-comment">     * 10pt</span><br><span class="hljs-comment"> */</span><br>banker_card_open[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=cards[card_sequence][<span class="hljs-number">0</span>];<br>banker_card_open[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]=cards[card_sequence][<span class="hljs-number">1</span>];<br>card_sequence++;<br>banker_card_close[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=cards[card_sequence][<span class="hljs-number">0</span>];<br>banker_card_close[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]=cards[card_sequence][<span class="hljs-number">1</span>];<br>card_sequence++;<br>user_cards[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=cards[card_sequence][<span class="hljs-number">0</span>];<br>user_cards[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]=cards[card_sequence][<span class="hljs-number">1</span>];<br>card_sequence++;<br>user_cards[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]=cards[card_sequence][<span class="hljs-number">0</span>];<br>user_cards[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]=cards[card_sequence][<span class="hljs-number">1</span>];<br>card_sequence++; <span class="hljs-comment">//line 69-80 distribute cards to banker and user</span><br><span class="hljs-comment">/*TODO 5 end*/</span><br><br><span class="hljs-comment">/*TODO 6 and 7: finish printCardAndPoint (at the bottom of the code), </span><br><span class="hljs-comment"> * the function can calculate the total point (TODO 7), and print all the cards and their total points (using BlackJack rules, TODO 6)</span><br><span class="hljs-comment"> * 10pt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nBanker&#x27;s open card:\n&quot;</span>);<br><span class="hljs-built_in">printCardAndPoint</span>(banker_card_open,<span class="hljs-number">1</span>);<span class="hljs-comment">/*Don&#x27;t edit this line, please complete the printCardAndPoint function (at the bottom of the code)*/</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nUser&#x27;s cards:\n&quot;</span>);<br><span class="hljs-built_in">printCardAndPoint</span>(user_cards,<span class="hljs-number">2</span>);<span class="hljs-comment">/*Don&#x27;t edit this line, please complete the printCardAndPoint function (at the bottom of the code)*/</span><br><span class="hljs-comment">/*TODO 6 end*/</span><br><br><span class="hljs-keyword">char</span> isDraw;<br><span class="hljs-keyword">int</span> user_cards_seq=<span class="hljs-number">2</span>;<br><span class="hljs-comment">/*TODO 8: Edit next part, ask user if he/she wants more cards?</span><br><span class="hljs-comment"> * when user say Y, add one card to user_cards[10][2], and print all user&#x27;s cards and points (call printCardAndPoint)</span><br><span class="hljs-comment"> * then calculate the total point, if total point &gt;=21, stop asking, and go to the next step</span><br><span class="hljs-comment"> * If user say N, stop asking, and go to the next step</span><br><span class="hljs-comment">     * Hint: do-while 10pt if-else 10pt</span><br><span class="hljs-comment"> * 10pt</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">calculatePoint</span>(user_cards,user_cards_seq)&lt;<span class="hljs-number">21</span>)<br>&#123;<br><span class="hljs-keyword">do</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nOne more card?&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot; %c&quot;</span>,&amp;isDraw);<br><span class="hljs-keyword">if</span>(isDraw==<span class="hljs-string">&#x27;Y&#x27;</span>)<br>&#123;<br>user_cards[user_cards_seq][<span class="hljs-number">0</span>]=cards[user_cards_seq][<span class="hljs-number">0</span>];<br>user_cards[user_cards_seq][<span class="hljs-number">1</span>]=cards[user_cards_seq][<span class="hljs-number">1</span>];<br>user_cards_seq++;<br><span class="hljs-built_in">printCardAndPoint</span>(user_cards,user_cards_seq);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(isDraw==<span class="hljs-string">&#x27;N&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<span class="hljs-keyword">while</span>(<span class="hljs-built_in">calculatePoint</span>(user_cards,user_cards_seq)&lt;<span class="hljs-number">21</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">calculatePoint</span>(user_cards,user_cards_seq)&gt;<span class="hljs-number">21</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nBust!\n\n&quot;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">calculatePoint</span>(user_cards,user_cards_seq)==<span class="hljs-number">21</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n21 Points!\n\n&quot;</span>);<br><span class="hljs-comment">/*TODO 8 end*/</span><br><br><span class="hljs-keyword">short</span> banker_all_card[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>]=&#123;&#123;banker_card_close[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>],banker_card_close[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]&#125;,&#123;banker_card_open[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>],banker_card_open[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]&#125;&#125;;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Banker&#x27;s all card:\n&quot;</span>);<br><span class="hljs-built_in">printCardAndPoint</span>(banker_all_card,<span class="hljs-number">2</span>);<br><br><span class="hljs-keyword">int</span> banker_final_sum=<span class="hljs-built_in">calculatePoint</span>(banker_all_card,<span class="hljs-number">2</span>); <span class="hljs-comment">/*Banker&#x27;s total points*/</span><br><span class="hljs-keyword">int</span> user_final_sum=<span class="hljs-built_in">calculatePoint</span>(user_cards,user_cards_seq); <span class="hljs-comment">/*User&#x27;s total points*/</span><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Your total points: %d\n&quot;</span>,user_final_sum);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Banker&#x27;s total points: %d\n&quot;</span>,banker_final_sum);<br><br><span class="hljs-keyword">if</span>(banker_final_sum==user_final_sum)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Tie! &quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(banker_final_sum&gt;user_final_sum|user_final_sum&gt;<span class="hljs-number">21</span>)&#123;<br>money-=bet;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;You Lose! &quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>money+=bet;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;You Win! &quot;</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Your money now is: %d\n&quot;</span>,money);<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">shuffle</span><span class="hljs-params">(<span class="hljs-keyword">short</span> cards[][<span class="hljs-number">2</span>])</span></span>&#123;<br><span class="hljs-comment">/*TODO 2: implement shuffle function taht can shuffle cards</span><br><span class="hljs-comment">* Rows: each cards, Columns: Suit, Rank</span><br><span class="hljs-comment"> * Hint: for 10pt*/</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">52</span>;i++)<br>&#123;<br><span class="hljs-keyword">int</span> x=<span class="hljs-built_in">rand</span>()%<span class="hljs-number">52</span>;<br><span class="hljs-keyword">int</span> y=<span class="hljs-built_in">rand</span>()%<span class="hljs-number">52</span>;<br><span class="hljs-keyword">int</span> tem_s=cards[x][<span class="hljs-number">0</span>];<br><span class="hljs-keyword">int</span> tem_r=cards[x][<span class="hljs-number">1</span>];<br>cards[x][<span class="hljs-number">0</span>]=cards[y][<span class="hljs-number">0</span>];<br>cards[x][<span class="hljs-number">1</span>]=cards[y][<span class="hljs-number">1</span>];<br>cards[y][<span class="hljs-number">0</span>]=tem_s;<br>cards[y][<span class="hljs-number">1</span>]=tem_r; <span class="hljs-comment">//line 138-145 Swap cards</span><br>&#125;<br><span class="hljs-comment">/*TODO 2 end*/</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printCardAndPoint</span><span class="hljs-params">(<span class="hljs-keyword">short</span> cards[][<span class="hljs-number">2</span>],<span class="hljs-keyword">short</span> n_card)</span></span>&#123;<br><span class="hljs-comment">/*TODO 6: finish printCardAndPoint, the function can calculate the total point (call calculatePoint *TODO 7)</span><br><span class="hljs-comment"> * print all the cards and their total points (using BlackJack rules)</span><br><span class="hljs-comment">     * Hint: for</span><br><span class="hljs-comment"> * 10pt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n_card;i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Suit=%d, Rank=%d ; &quot;</span>,cards[i][<span class="hljs-number">0</span>],cards[i][<span class="hljs-number">1</span>]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nTotal points=%d\n&quot;</span>,<span class="hljs-built_in">calculatePoint</span>(cards,n_card));<br><span class="hljs-comment">/*TODO 6 end*/</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calculatePoint</span><span class="hljs-params">(<span class="hljs-keyword">short</span> cards[][<span class="hljs-number">2</span>],<span class="hljs-keyword">short</span> n_card)</span></span>&#123;<br><span class="hljs-keyword">int</span> totalPoint=<span class="hljs-number">0</span>;<br><span class="hljs-comment">/*TODO 7: calculate the total point (call calculatePoint) and return</span><br><span class="hljs-comment">* be carefule of A, can be 11 or 1</span><br><span class="hljs-comment">     * Hint: if-else</span><br><span class="hljs-comment"> * for and if-else 10pt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n_card;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(cards[i][<span class="hljs-number">1</span>]==<span class="hljs-number">11</span>||cards[i][<span class="hljs-number">1</span>]==<span class="hljs-number">12</span>||cards[i][<span class="hljs-number">1</span>]==<span class="hljs-number">13</span>)<br>totalPoint+=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cards[i][<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>&amp;&amp;(totalPoint+<span class="hljs-number">11</span>)&lt;=<span class="hljs-number">21</span>)<br>totalPoint+=<span class="hljs-number">11</span>;<br><span class="hljs-keyword">else</span><br>totalPoint+=cards[i][<span class="hljs-number">1</span>];<br>&#125;<br><span class="hljs-comment">/*TODO 7 end*/</span><br><span class="hljs-keyword">return</span> totalPoint;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/img/photo_2022-01-02_11-40-09.jpg" alt="" /></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CSES解題紀錄</title>
    <link href="/2021/12/28/CSES/"/>
    <url>/2021/12/28/CSES/</url>
    
    <content type="html"><![CDATA[<h1 id="introductory"><a class="markdownIt-Anchor" href="#introductory"></a> Introductory</h1><table><thead><tr><th>題目</th><th>連結</th><th>狀態</th></tr></thead><tbody><tr><td><a href="https://cses.fi/problemset/task/1068">Weird Algorithm</a></td><td><a href="https://jinlk.site/2021/12/20/CSES-Weird-Algorithm/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1083">Missing Number</a></td><td><a href="https://jinlk.site/2021/12/22/CSES-Missing-Number/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1069">Repetitions</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1094">Increasing Array</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1070">Permutations</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1071">Number Spiral</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1072">Two Knights</a></td><td><a href="https://jinlk.site/2021/12/29/CSES-Two-Knights/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1092">Two Sets</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1617">Bit Strings</a></td><td><a href="https://jinlk.site/2021/12/19/CSES-Bit-Strings/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>解題筆記</category>
      
      <category>CSES</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大一CPE初體驗心得</title>
    <link href="/2021/12/21/CPE-first-time/"/>
    <url>/2021/12/21/CPE-first-time/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>CPE類似於大學版的APCS，並且都是免費的(讚)，抱著不用錢的心態，就索性報名考考看。由於是第一次考，經驗不多，把試場一些注意事項寫下來，解題部分看看就好，比我強的人大有人在，也歡迎大老在底下留言，交流交流。</p><p>這次考的場次是2021/12/21的。</p><h1 id="考前"><a class="markdownIt-Anchor" href="#考前"></a> 考前</h1><p>高中有打C++解題的經歷，所以對基本語法還算OK，不過沒什麼演算法基礎。考前幾週有去codeforces打了兩場比賽跟開始做CPE官網列出的<a href="https://cpe.cse.nsysu.edu.tw/environment.php">一顆星題(共49題)</a>，不過我沒有每題都打完(懶)，大概看了三十幾題就來考了。</p><h1 id="考試"><a class="markdownIt-Anchor" href="#考試"></a> 考試</h1><p>考場就是學校資工系的電腦教室，座位隨便坐，前面有快一個小時的時間給你測試系統，建議要考的人先在家自己熟悉一下，不要像我一開始不熟悉緊張得要死…，CPE是採用<a href="http://coding-frenzy.arping.me/">瘋狂程設</a>這套軟體(介面十分古老)。<br />考試可以帶筆，用試場提供的規則紙張當計算紙。</p><h2 id="考試介面"><a class="markdownIt-Anchor" href="#考試介面"></a> 考試介面</h2><p>介面很簡單，分成上─題目、中─Code、下─輸出，右邊有編譯後的狀態 (AC, TLE, WA 等)、Compiler 訊息、input/output 資料，此外，系統有英漢字典跟<strong>C/C++參考資料</strong>可以查，挺佛心的，同時可以看到即時排名，包含教室排名(你所在考場的排名)及全國排名，但排名有時會出現教室排名更新了，全國的卻還沒更新的情況，請已教室排名顯示的解題紀錄為主，因為全國考場會每五分鐘傳一次資料到中山大學伺服器(CPE主辦單位)，難免會有塞車情形，可以過個再五分鐘按f5刷新。</p><p>此外，題目會有兩種按鈕，<strong>看題</strong>跟<strong>解題</strong>，可以先把題目看完後，再按解題開始code，看題時間不會記錄到解題時間內。</p><p><img src="/img/%E7%98%8B%E7%8B%82.png" alt="瘋狂程設介面" /></p><h2 id="過程"><a class="markdownIt-Anchor" href="#過程"></a> 過程</h2><p><a href="https://cpe.cse.nsysu.edu.tw/cpe/test_data/2021-12-21">題目</a></p><ol><li><p>[x] 點開第一題，大概想了五分鐘，先把大概的程式碼寫在紙上後，按下解題，開始code，幸運的思路沒錯，不用修改code就拿到第一個<font color=#4DC44B>AC</font>，不過美好的開始不代表會一直美好下去…</p></li><li><p>[x] 第二題想了大概二十分鐘吧，原本以為只有質數有可能為解，打算用<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95">Sieve of Eratosthenes</a>判斷質數後，判斷答案，仔細想了想才發現不一定，最後用基於<strong>Sieve of Eratosthenes</strong>的方法修改了一下思路，最後總共花了36分鐘拿到<font color=#4DC44B>AC</font>。</p></li><li><p>[x] 接下來由於看到第三題感覺比較複雜，就先跳到第四題了，大概花了十幾分鐘，用了雙層迴圈拿到<font color=#4DC44B>AC</font>，但這方法似乎沒有很好。</p></li></ol><ul><li>目前為止對我來說都還挺順利，但接下來…</li></ul><ol start="4"><li><p>第三題我印象深刻(<a href="https://zerojudge.tw/ShowProblem?problemid=c082">UVA00118</a>)，機器人走路這題搞了我快兩小時…，慢慢手刻每一行Code，當我還在尋思程式哪裡出錯時，考試最後十分鐘，我才發現我搞錯題意了…，但為時已晚…</p></li><li><p>5-7題還不敢碰，演算法沒什麼基礎Σ(lliдﾟﾉ)ﾉ</p></li></ol><h1 id="結語"><a class="markdownIt-Anchor" href="#結語"></a> 結語</h1><p>第一次考CPE拿下三題，符合我的預期，但很嘔的是原本如果仔細看題目，應該能拿到四題的說…，總之打算明年三月再去考一次，這段期間希望自己多刷一些題跟學演算法吧!</p><h3 id="成績紀錄"><a class="markdownIt-Anchor" href="#成績紀錄"></a> 成績紀錄</h3><table><thead><tr><th>考試日期</th><th>解題數</th><th>排名</th><th>排名比例</th><th>評等</th></tr></thead><tbody><tr><td>2021-12-21 (第一次)</td><td>3 / 7</td><td>161 / 2459</td><td>6.5%</td><td>進階級：熟悉程式設計的邏輯概念，能以程式克服一般常見的問題。</td></tr></tbody></table><p><em>last updated 21/12/23 12:44</em></p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一個網站 [Hexo x Github Page] (待更)</title>
    <link href="/2021/12/19/first-website/"/>
    <url>/2021/12/19/first-website/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>從很久以前就有創自己靜態網頁的想法，但總是因為覺得困難或麻煩而沒去研究，這次剛好有空閒時間，順手來研究一下，沒想到比想像中簡單，以下我會將我創建這個Blog的經歷從頭到尾寫下來，希望對第一次創Blog的夥伴能快速上手。</p><p>另外，創建這個Blog是<strong>完全免費</strong>的(包含自訂義網域)，也不需要信用卡，所以請大家安心食用 😃。</p><h1 id="為何hexo-x-github"><a class="markdownIt-Anchor" href="#為何hexo-x-github"></a> 為何Hexo x Github</h1><p>Hexo官網寫著<strong>快速、簡單且強大的網誌框架</strong>，而也確實如此，全自動部署，簡潔、輕便，主題樣式及美觀我認為比競爭者Hugo好上不少，學會一些常用指令就能上手了，即便前端零基礎。</p><p>Github好處就是免費、架站快速、穩定，後期也可以自訂網域，當然有些限制:</p><ul><li>網站大小 &lt; 1GB</li><li>流量限制 &lt; 100GB/月</li><li>建置次數 &lt; 10次/時</li></ul><p>但作為一個自己的靜態部落格，應該還夠用。</p><h1 id="開始建置環境"><a class="markdownIt-Anchor" href="#開始建置環境"></a> 開始建置環境</h1><p>需安裝/註冊的東西:</p><ul><li>Node.js</li><li>Git</li><li>Hexo</li><li>註冊Github帳號</li></ul><h2 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Node.js</h2><p>提供使用 npm 來安裝套件。<br />下面去<a href="https://nodejs.org/en/">Node.js</a>官網，點擊左邊穩定版本下載即可。<br /><img src="/img/nodejs.png" alt="Node.js官網下載" /></p><h2 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h2><p>用來取得Github的檔案及將檔案發佈到Github。<br /><img src="/img/git.jpg" alt="Git官網下載" /></p><h2 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> Hexo</h2><p>完成上述兩個安裝後，就可以安裝Hexo了，<br />首先，先開好一個放部落格網站檔案的資料夾，並在cmd(小黑窗)打開。</p><p>輸入安裝指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><p>接著，輸入初始化指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>安裝所需檔案:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install<br></code></pre></td></tr></table></figure><p>接著會在所在資料夾看到以下檔案，如果有的話，目前為止都是對的。<br /><img src="/img/file.png" alt="檢查資料夾是否有這些檔案" /></p><p>這個時候，在黑窗輸入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>如果黑窗跳出這段訊息:<br /><img src="/img/hexos.png" alt="" /></p><p>去瀏覽器訪問http://localhost:4000/ 就會看到你目前已經建置好一個網頁了!<br /><img src="/img/landscape.jpg" alt="" /></p><p>(以下待更)</p><h1 id="認識github-page"><a class="markdownIt-Anchor" href="#認識github-page"></a> 認識Github Page</h1><p><a href="https://github.com/">Github</a>為世界上最大的代碼存放網站和開源社群，而<strong>Github Page</strong>是GitHub提供的一個網頁代管服務，可以用於存放<strong>靜態網頁</strong>，例如:部落格、專案文件甚至整本書。一般GitHub Pages的網站使用github.io的子域名(<a href="http://username.github.io">username.github.io</a>)，但是使用者也可以使用第三方域名。</p><p>基於Github的穩定性及不用付費，將個人Blog架設在Github Page是最方便快速的方法之一。</p><h2 id="創立github-page"><a class="markdownIt-Anchor" href="#創立github-page"></a> 創立Github Page</h2><h3 id="註冊github"><a class="markdownIt-Anchor" href="#註冊github"></a> 註冊Github</h3><h3 id="建立repository"><a class="markdownIt-Anchor" href="#建立repository"></a> 建立Repository</h3><h1 id="timeline"><a class="markdownIt-Anchor" href="#timeline"></a> Timeline</h1><ul><li>21/12/17 - 研究Hexo</li><li>21/12/18 - 找到fluid主題</li><li>21/12/19 - 首次部署網站到github</li><li>21/12/21 - <a href="http://xn--jinlk-mt3ik37t7jdmqg9py.cf">自訂義網域jinlk.cf</a> (免費)</li><li>21/12/22 - 一美金買了jinlk.site網域</li></ul><p><em>last updated 21/12/23 23:51</em></p>]]></content>
    
    
    <categories>
      
      <category>網站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>關於</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>嗨，我是Jin (ID名:Jinlk)，這個網站主要目的在於: 記錄我的學習筆記及一些心得，文章都是非常主觀的，如有錯誤請不吝指教。</p><h2 id="關於我"><a class="markdownIt-Anchor" href="#關於我"></a> 關於我</h2><ul><li>台灣人</li><li>中央資管大一生</li><li>資訊領域</li></ul><h2 id="興趣"><a class="markdownIt-Anchor" href="#興趣"></a> 興趣</h2><ul><li>程式競賽(還在努力進步中)</li><li>資訊安全CTF(這方面知識還涉略不多)</li><li>攝影(歡迎追蹤IG交流)</li></ul><p>本部落格創建於2021/12/19，目前還在陸續加入一些插件，完善部落格功能，本人盡量在學習之虞多發些文章，主題包含<strong>競程算法解題筆記</strong>、<strong>經驗分享</strong>或<strong>攝影紀錄分享</strong>，除此之外，也喜歡多與志同道合的夥伴們交流，歡迎加友鏈!</p>]]></content>
    
  </entry>
  
  
  
</search>
