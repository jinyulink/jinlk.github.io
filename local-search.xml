<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CS50 Lecture 8 - HTML, CSS, JavaScript</title>
    <link href="/2022/02/21/cs50_frontend/"/>
    <url>/2022/02/21/cs50_frontend/</url>
    
    <content type="html"><![CDATA[<h1 id="internet"><a class="markdownIt-Anchor" href="#internet"></a> Internet</h1><p>Big storage: Cloud<br />A bunch of data we can all reach wirelessly.<br /><img src="/img/image_2022-02-21_21-40-01.png" alt="The ARPANET in 1969" /><br />Router: taken the data and decide to send it this way or that way.<br />How to send a packet , send it one router by router</p><h2 id="tcpip"><a class="markdownIt-Anchor" href="#tcpip"></a> TCP/IP</h2><p>IP: #.#.#.# (each # is 1-255(8 bits)), so it means that an IP address must use 32 bits or 4 bytes</p><p>IPv4: 32bits IPv6: 128bits(cuz there are too many devices nowadays) 128bits -&gt; crazy amounts of devices</p><h3 id="tcp"><a class="markdownIt-Anchor" href="#tcp"></a> TCP</h3><p>Transmission Control Protocol</p><h3 id="ip"><a class="markdownIt-Anchor" href="#ip"></a> IP</h3><h2 id="dns"><a class="markdownIt-Anchor" href="#dns"></a> DNS</h2><p>Domain Name Service (Translate domain name to ip address)</p><h2 id="http"><a class="markdownIt-Anchor" href="#http"></a> HTTP</h2><p>Hyper Text Transfer Protocol<br />A final protocol that web browsers use to communicate with servers.(Build on top of the Internet)</p><p>HTTPS: Secure HTTP</p><p>Format: <a href="https://jinlk.site/">https://jinlk.site/</a> (斜線指該網站的root資料夾 通常不顯示)</p><ul><li>jinlk.site : Domain name</li><li>www : a specific server in that domain (it is actually refer to lots of servers nowadays)</li><li>.site: top level domain (probably known .com .org .net .edu)</li></ul><h2 id="getpost"><a class="markdownIt-Anchor" href="#getpost"></a> GET/POST</h2><p>GET: Get data from the server</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>看起來像這樣 第一個<span class="hljs-string">&#x27;/&#x27;</span>代表檔案夾位置<br><span class="hljs-regexp">//</span> Request<br>GET <span class="hljs-regexp">/ HTTP/</span><span class="hljs-number">1.1</span><br>Host: jinlk.site<br></code></pre></div></td></tr></table></figure><p>現在很多網站託管服務像wix / wordpress, 他們其實只有一個大伺服器，當收到client的請求後 得知被詢問的url，就會去伺服器內尋找這個webpage然後回傳給client。</p><figure class="highlight sqf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sqf"><span class="hljs-comment">// Response</span><br>HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK<br>Content-<span class="hljs-built_in">Type</span>: <span class="hljs-built_in">text</span>/html <span class="hljs-comment">// 檔案形式</span><br></code></pre></div></td></tr></table></figure><ul><li>可以用Curl測試看看網址</li></ul><figure class="highlight armasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs armasm"><span class="hljs-symbol">curl</span> -I -X <span class="hljs-meta">GET</span> https:<span class="hljs-comment">//jinlk.site/</span><br></code></pre></div></td></tr></table></figure><ul><li>如果沒問題可以看到200</li><li>如果沒有該位置則404</li></ul><p><img src="/img/image_2022-02-21_22-49-45.png" alt="" /></p><p>POST: Send data to the server<br /><img src="/img/image_2022-02-21_22-33-02.png" alt="左client 右server" /></p><h1 id="front-end-language"><a class="markdownIt-Anchor" href="#front-end-language"></a> Front-end Language</h1><p>HTML: Hyper Text Markup Language<br />CSS: Cascading Style Sheets<br />Javascript: JavaScript</p><h2 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h2><p>Example: <a href="/2022/02/21/hello_example/">示範頁面</a></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> <br>            hello, world<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        hello, body<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>usually body tag contain almost 90% of the content</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/02/21/toeicsw/"/>
    <url>/2022/02/21/toeicsw/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>競程筆記</title>
    <link href="/2022/02/17/cpnote/"/>
    <url>/2022/02/17/cpnote/</url>
    
    <content type="html"><![CDATA[<h1 id="基本架構"><a class="markdownIt-Anchor" href="#基本架構"></a> 基本架構</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//Author: Jinlk</span><br><span class="hljs-comment">//https://jinlk.site</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IO cin.tie(0);ios_base::sync_with_stdio(false)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> int long long</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> vt vector</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> pb push_back</span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">1e5</span> + <span class="hljs-number">50</span>;<br><span class="hljs-keyword">int</span> a[maxn];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>        IO;<br><span class="hljs-keyword">int</span> n;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) cin &gt;&gt; a[i];<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="方便加速程式"><a class="markdownIt-Anchor" href="#方便加速程式"></a> 方便/加速程式</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">//避免自動輸出緩衝區</span><br><br>ios_base::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>); <span class="hljs-comment">//c++跟c不混用</span><br><br>cout&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>; <span class="hljs-comment">//避免自動輸出緩衝區</span><br></code></pre></div></td></tr></table></figure><p><a href="https://hackmd.io/@wiwiho/CPN-io-optimization">I/O優化</a></p><h1 id="時間複雜度"><a class="markdownIt-Anchor" href="#時間複雜度"></a> 時間複雜度</h1><p>每秒10^8次</p><h1 id="前綴和"><a class="markdownIt-Anchor" href="#前綴和"></a> 前綴和</h1><h1 id="二分搜"><a class="markdownIt-Anchor" href="#二分搜"></a> 二分搜</h1><p>O(logn)</p><h1 id="stl"><a class="markdownIt-Anchor" href="#stl"></a> STL</h1><h2 id="vector"><a class="markdownIt-Anchor" href="#vector"></a> Vector</h2><p><a href="https://hackmd.io/@tonychi/rye6XcL6K#/1/2">PCCA寒訓</a></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br>vector&lt;<span class="hljs-keyword">int</span>&gt; v;<br> <br>v.<span class="hljs-built_in">size</span>(); <span class="hljs-comment">// v 的長度</span><br>v.<span class="hljs-built_in">resize</span>(n); <span class="hljs-comment">// 調整大小為 n</span><br>v.<span class="hljs-built_in">clear</span>(); <span class="hljs-comment">// 初始化 v</span><br>v.<span class="hljs-built_in">push_back</span>(val); <span class="hljs-comment">// 放 val 在 v 後面</span><br>v.<span class="hljs-built_in">begin</span>(); v.<span class="hljs-built_in">end</span>(); <span class="hljs-comment">// v 的 iterator</span><br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(n, <span class="hljs-number">0</span>)</span></span>; <span class="hljs-comment">//宣告v 長度n 初始值0</span><br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">v.<span class="hljs-built_in">push_back</span>(val); <span class="hljs-comment">//把 val 的值複製進去</span><br>v.<span class="hljs-built_in">emplace_back</span>(val); <span class="hljs-comment">//把 val 做為參數來宣告</span><br><span class="hljs-comment">//速度上幾乎沒差 除非你 push_back() 一個很大的東西</span><br><br><span class="hljs-comment">// emplace_back() 的好處在於它可以減少「宣告」的繁瑣</span><br>vector&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt; &gt; arr;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    arr.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>)); <br>        <span class="hljs-comment">// 要先產生 pair 才可以被複製</span><br>    <br>    arr.<span class="hljs-built_in">emplace_back</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>);<br>        <span class="hljs-comment">// 簡潔許多</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">v.<span class="hljs-built_in">resize</span>(n); <span class="hljs-comment">//把 v 長度設為 n</span><br>v.<span class="hljs-built_in">resize</span>(n, <span class="hljs-number">0</span>); <span class="hljs-comment">//如果 v 需要增加長度，值會是 0已存在的值不會被改變！！</span><br>v.<span class="hljs-built_in">assign</span>(n, <span class="hljs-number">0</span>); <span class="hljs-comment">//把 v 初始化成長度為 n且值為 0</span><br></code></pre></div></td></tr></table></figure><p>請不要用 erase(), insert()，vector 是連續儲存的，所以移除或插入在中間會需要 O(n)的時間。</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//iterator</span><br>v.<span class="hljs-built_in">begin</span>(); <span class="hljs-comment">//回傳指向第 0 個的 iterator</span><br>v.<span class="hljs-built_in">end</span>(); <span class="hljs-comment">//回傳指向最後一項的下一項的 iterator</span><br><span class="hljs-comment">//所以 v.begin() 到 v.end() 是左閉右開</span><br><br>v.<span class="hljs-built_in">rbegin</span>(); <span class="hljs-comment">//回傳指向最後一項的 iterator</span><br>v.<span class="hljs-built_in">rend</span>(); <span class="hljs-comment">//回傳指向第 0 項的前一項的 iterator</span><br><br><span class="hljs-comment">//迴圈</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(<span class="hljs-number">10</span>)</span></span>;<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> &amp;i: v) cin &gt;&gt; i; <span class="hljs-comment">// 輸入 10 個東西到 v</span><br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> it = v.<span class="hljs-built_in">begin</span>(); it != v.<span class="hljs-built_in">end</span>(); ++it) &#123;<br>        cout &lt;&lt; *it &lt;&lt; <span class="hljs-string">&#x27;\n&#x27;</span>; <span class="hljs-comment">// 記得加 * 在變數前面來取值</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一上選課心得</title>
    <link href="/2022/01/27/course2021_1/"/>
    <url>/2022/01/27/course2021_1/</url>
    
    <content type="html"><![CDATA[<h4 id="大一上就這麼過了想說現在寒假有空順便打一下這學期上課的心得以免到時候忘了-所有老師人都很nice我很慶幸能上到這些老師的課也希望下學期繼續加油"><a class="markdownIt-Anchor" href="#大一上就這麼過了想說現在寒假有空順便打一下這學期上課的心得以免到時候忘了-所有老師人都很nice我很慶幸能上到這些老師的課也希望下學期繼續加油"></a> 大一上就這麼過了，想說現在寒假有空順便打一下這學期上課的心得，以免到時候忘了。所有老師人都很nice，我很慶幸能上到這些老師的課，也希望下學期繼續加油!</h4><h1 id="必修"><a class="markdownIt-Anchor" href="#必修"></a> 必修</h1><h2 id="國文b中文寫作-莊斐喬-2學分-90分"><a class="markdownIt-Anchor" href="#國文b中文寫作-莊斐喬-2學分-90分"></a> 國文（B）：中文寫作 - 莊斐喬 (2學分 90分)</h2><p><strong>課程輕鬆,老師人很好</strong>，選課前就有去版上聽過很涼很甜(我的分數應該算中等)，整學期只有一堂有點名(有提前告知)，上課可以做自己想做的事，我個人認為loading算輕，作業+報告總共有5次:</p><ul><li>分組企劃案 - 想主題花最久時間，實際做報告及練習演講時間一周可搞定 (感謝這學期的組員ww)。</li><li>閱讀心得 - 從圖書館規定書庫選一本書寫心得，可事先打好草稿，帶過去課堂抄寫。</li><li>新詞彙報告 - 個人報告，介紹最近網路的新詞彙，時長3分鐘內即可。</li><li>公文 - 課堂上完成，蠻簡單的作業，第一次學到公文怎麼寫w。</li><li>履歷+面試 - 蠻實用的課程，老師會教你如何寫履歷及自傳，在最後一堂課老師會看你的履歷幫你面試。</li></ul><h2 id="計算機概論i-胡雅涵-3學分-94分"><a class="markdownIt-Anchor" href="#計算機概論i-胡雅涵-3學分-94分"></a> 計算機概論Ｉ - 胡雅涵 (3學分 94分)</h2><p><strong>極涼</strong>，成績分配是四次考試一次25%，其中有點過一次名，有到的總成績直接加一分ww，考試考老師上課用的ptt，考前背熟基本上90up應該不是難事(不過建議早個兩個禮拜讀)，我期末太晚讀，加上還有另外一科再隔天考，沒背熟，結果第四次考試只有77😢，不然總成績應該更高…(我覺得95以上的人應該有10~15個)</p><h2 id="管院微積分-須上苑-3學分-97分"><a class="markdownIt-Anchor" href="#管院微積分-須上苑-3學分-97分"></a> 管院微積分 - 須上苑 (3學分 97分)</h2><p><strong>老師有趣</strong>，基本上我是覺得管院微積分不算太難，考前自己讀過課本一遍，算個兩年歷屆不會考太差，分數達到一定門檻的教授會請喝飲料或吃東西ww，挺nice。成績包含三次會考/作業/小考，不過我這97分，應該有快十分是加來的(python + 自己作的筆記)，python就是用code畫出微積分方程式，學一下應該不算太難，那如果你人脈好點，去跟大神A一下code交作業也不是不行ww，另外筆記部分，只要你有作筆記或其他努力，學期末拍起來傳給教授，會幫你加分(最多十分)，這分數超賺的，會考成績沒比人家高，靠加分應該可以贏很多人。</p><h2 id="企業概論-周恩頤-3學分-89分"><a class="markdownIt-Anchor" href="#企業概論-周恩頤-3學分-89分"></a> 企業概論 - 周恩頤 (3學分 89分)</h2><p>說實話，這門課對我來說無聊了一點，我好像每次去上課到最後都睡著了…，成績包含作業/期中/期末，考試考老師簡報中有英文的地方，我期中讀錯方向 結果分數極低57.5…，期末咬牙拼命讀拿了102分，才鬆了一口氣…，</p><h2 id="會計學-謝依靜-3學分-85分"><a class="markdownIt-Anchor" href="#會計學-謝依靜-3學分-85分"></a> 會計學 - 謝依靜 (3學分 85分)</h2><p>會計學裡有很多帳目名稱要背好，成績包含作業/出席/考試，建議平時作業好好自己寫，考試應該可以85以上，像我平常作業大部分都用抄的…，考試成績普普都大概80左右，然後我誇張的是有一次作業寫錯題沒發覺直接交出去，那一次作業我只有19分…。</p><h1 id="選修"><a class="markdownIt-Anchor" href="#選修"></a> 選修</h1><h2 id="初階程式設計-曾意儒-3學分-95分"><a class="markdownIt-Anchor" href="#初階程式設計-曾意儒-3學分-95分"></a> 初階程式設計 - 曾意儒 (3學分 95分)</h2><p>是這學期新來的教授，好像讀過哈佛(猛ww)，不過據說下學期他就去交大教書了，所以我們算唯一上過他課的學生，聽其他班的同學講，我們班教學模式應該跟他們不太一樣，他們有好多次上機測驗，而我們是期中紙筆考試，期末做21點專案，我覺得輕鬆很多ww，成績包含課堂演練/作業/考試/期末專案，但期中的題目個人認為比較刁鑽，很多人拿80以下，我是因為高中碰過，可能對我來說簡單一點。</p><h2 id="日文一a-王中成-3學分-88分"><a class="markdownIt-Anchor" href="#日文一a-王中成-3學分-88分"></a> 日文(一)A - 王中成 (3學分 88分)</h2><p>這科大概是我覺得最可惜的…，老師給分其實很甜，但我有點不認真，上完課回去都沒有複習，導致我期中是全班最低的74…，到後來我才有常去複習，老師上課會補充蠻多的，會傳麥克風下去給同學練習講，有上課基本上都會講，同時，他上課會不斷鼓勵同學ww，「大家講得很好呢!」、「大家學這麼快就會了，好厲害」，總之老師人很好，理論上分數94以上不難才對。</p><h1 id="總結"><a class="markdownIt-Anchor" href="#總結"></a> 總結</h1><p>2022/02/07 - 排名出來了…0.5分的差距就有書卷了…這0.5分中間竟然有三個人…我企業概論還是日文隨便一顆期中高個9分就有了 好氣<br />你各位認真點啊…別像我一樣</p>]]></content>
    
    
    <categories>
      
      <category>學校</category>
      
    </categories>
    
    
    <tags>
      
      <tag>選課</tag>
      
      <tag>大學</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSES解題紀錄</title>
    <link href="/2021/12/28/CSES/"/>
    <url>/2021/12/28/CSES/</url>
    
    <content type="html"><![CDATA[<h1 id="introductory"><a class="markdownIt-Anchor" href="#introductory"></a> Introductory</h1><table><thead><tr><th>題目</th><th>連結</th><th>狀態</th></tr></thead><tbody><tr><td><a href="https://cses.fi/problemset/task/1068">Weird Algorithm</a></td><td><a href="https://jinlk.site/2021/12/20/CSES-Weird-Algorithm/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1083">Missing Number</a></td><td><a href="https://jinlk.site/2021/12/22/CSES-Missing-Number/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1069">Repetitions</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1094">Increasing Array</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1070">Permutations</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1071">Number Spiral</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1072">Two Knights</a></td><td><a href="https://jinlk.site/2021/12/29/CSES-Two-Knights/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1092">Two Sets</a></td><td>連結</td><td><font color=#A8A1A0>NA</font></td></tr><tr><td><a href="https://cses.fi/problemset/task/1617">Bit Strings</a></td><td><a href="https://jinlk.site/2021/12/19/CSES-Bit-Strings/">連結</a></td><td><font color=#4DC44B>AC</font></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>解題筆記</category>
      
      <category>CSES</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大一CPE初體驗心得</title>
    <link href="/2021/12/21/CPE-first-time/"/>
    <url>/2021/12/21/CPE-first-time/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>CPE類似於大學版的APCS，並且都是免費的(讚)，抱著不用錢的心態，就索性報名考考看。由於是第一次考，經驗不多，把試場一些注意事項寫下來，解題部分看看就好，比我強的人大有人在，也歡迎大老在底下留言，交流交流。</p><p>這次考的場次是2021/12/21的。</p><h1 id="考前"><a class="markdownIt-Anchor" href="#考前"></a> 考前</h1><p>高中有打C++解題的經歷，所以對基本語法還算OK，不過沒什麼演算法基礎。考前幾週有去codeforces打了兩場比賽跟開始做CPE官網列出的<a href="https://cpe.cse.nsysu.edu.tw/environment.php">一顆星題(共49題)</a>，不過我沒有每題都打完(懶)，大概看了三十幾題就來考了。</p><h1 id="考試"><a class="markdownIt-Anchor" href="#考試"></a> 考試</h1><p>考場就是學校資工系的電腦教室，座位隨便坐，前面有快一個小時的時間給你測試系統，建議要考的人先在家自己熟悉一下，不要像我一開始不熟悉緊張得要死…，CPE是採用<a href="http://coding-frenzy.arping.me/">瘋狂程設</a>這套軟體(介面十分古老)。<br />考試可以帶筆，用試場提供的規則紙張當計算紙。</p><h2 id="考試介面"><a class="markdownIt-Anchor" href="#考試介面"></a> 考試介面</h2><p>介面很簡單，分成上─題目、中─Code、下─輸出，右邊有編譯後的狀態 (AC, TLE, WA 等)、Compiler 訊息、input/output 資料，此外，系統有英漢字典跟<strong>C/C++參考資料</strong>可以查，挺佛心的，同時可以看到即時排名，包含教室排名(你所在考場的排名)及全國排名，但排名有時會出現教室排名更新了，全國的卻還沒更新的情況，請已教室排名顯示的解題紀錄為主，因為全國考場會每五分鐘傳一次資料到中山大學伺服器(CPE主辦單位)，難免會有塞車情形，可以過個再五分鐘按f5刷新。</p><p>此外，題目會有兩種按鈕，<strong>看題</strong>跟<strong>解題</strong>，可以先把題目看完後，再按解題開始code，看題時間不會記錄到解題時間內。</p><p><img src="/img/%E7%98%8B%E7%8B%82.png" alt="瘋狂程設介面" /></p><h2 id="過程"><a class="markdownIt-Anchor" href="#過程"></a> 過程</h2><p><a href="https://cpe.cse.nsysu.edu.tw/cpe/test_data/2021-12-21">題目</a></p><ol><li><p>[x] 點開第一題，大概想了五分鐘，先把大概的程式碼寫在紙上後，按下解題，開始code，幸運的思路沒錯，不用修改code就拿到第一個<font color=#4DC44B>AC</font>，不過美好的開始不代表會一直美好下去…</p></li><li><p>[x] 第二題想了大概二十分鐘吧，原本以為只有質數有可能為解，打算用<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95">Sieve of Eratosthenes</a>判斷質數後，判斷答案，仔細想了想才發現不一定，最後用基於<strong>Sieve of Eratosthenes</strong>的方法修改了一下思路，最後總共花了36分鐘拿到<font color=#4DC44B>AC</font>。</p></li><li><p>[x] 接下來由於看到第三題感覺比較複雜，就先跳到第四題了，大概花了十幾分鐘，用了雙層迴圈拿到<font color=#4DC44B>AC</font>，但這方法似乎沒有很好。</p></li></ol><ul><li>目前為止對我來說都還挺順利，但接下來…</li></ul><ol start="4"><li><p>第三題我印象深刻(<a href="https://zerojudge.tw/ShowProblem?problemid=c082">UVA00118</a>)，機器人走路這題搞了我快兩小時…，慢慢手刻每一行Code，當我還在尋思程式哪裡出錯時，考試最後十分鐘，我才發現我搞錯題意了…，但為時已晚…</p></li><li><p>5-7題還不敢碰，演算法沒什麼基礎Σ(lliдﾟﾉ)ﾉ</p></li></ol><h1 id="結語"><a class="markdownIt-Anchor" href="#結語"></a> 結語</h1><p>第一次考CPE拿下三題，符合我的預期，但很嘔的是原本如果仔細看題目，應該能拿到四題的說…，總之打算明年三月再去考一次，這段期間希望自己多刷一些題跟學演算法吧!</p><h3 id="成績紀錄"><a class="markdownIt-Anchor" href="#成績紀錄"></a> 成績紀錄</h3><table><thead><tr><th>考試日期</th><th>解題數</th><th>排名</th><th>排名比例</th><th>評等</th></tr></thead><tbody><tr><td>2021-12-21 (第一次)</td><td>3 / 7</td><td>161 / 2459</td><td>6.5%</td><td>進階級：熟悉程式設計的邏輯概念，能以程式克服一般常見的問題。</td></tr></tbody></table><p><em>last updated 21/12/23 12:44</em></p>]]></content>
    
    
    <categories>
      
      <category>心得</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一個網站 [Hexo x Github Page]</title>
    <link href="/2021/12/19/first-website/"/>
    <url>/2021/12/19/first-website/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>從很久以前就有創自己靜態網頁的想法，但總是因為覺得困難或麻煩而沒去研究，這次剛好有空閒時間，就來研究一下。</p><p>雖然網路上已經有很多相關文章了，但這邊還是將過程記錄下來打成文章。</p><h1 id="為何hexo-x-github"><a class="markdownIt-Anchor" href="#為何hexo-x-github"></a> 為何Hexo x Github</h1><p>Hexo官網寫著<strong>快速、簡單且強大的網誌框架</strong>，而也確實如此，全自動部署，簡潔、輕便，主題樣式及美觀我認為比競爭者Hugo好上不少，學會一些常用指令就能上手了，即便前端零基礎。</p><p>Github好處就是免費、架站快速、穩定，後期也可以自訂網域，當然有些限制:</p><ul><li>網站大小 &lt; 1GB</li><li>流量限制 &lt; 100GB/月</li><li>建置次數 &lt; 10次/時</li></ul><p>但作為一個自己的靜態部落格，應該還夠用。</p><h1 id="開始建置環境"><a class="markdownIt-Anchor" href="#開始建置環境"></a> 開始建置環境</h1><p>需安裝/註冊的東西:</p><ul><li>Node.js</li><li>Git</li><li>Hexo</li><li>註冊Github帳號</li><li>一個存放網站檔案的資料夾</li></ul><h2 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Node.js</h2><p>提供使用 npm 來安裝套件。<br />下面去<a href="https://nodejs.org/en/">Node.js</a>官網，點擊左邊穩定版本下載即可。<br /><img src="/img/nodejs.png" alt="Node.js官網下載" /></p><h2 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h2><p>用來取得Github的檔案及將檔案發佈到Github。<br /><img src="/img/git.jpg" alt="Git官網下載" /></p><h2 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> Hexo</h2><p>完成上述兩個安裝後，就可以安裝Hexo了。</p><p>在這裡，我在桌面新創建一個First-website的資料夾做示範。<br /><img src="/img/image_2022-02-08_23-06-53.png" alt="新增資料夾" /></p><p>打開終端機，cd到剛剛創建的資料夾</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> Desktop\First-website<br></code></pre></div></td></tr></table></figure><p>接著輸入安裝指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></div></td></tr></table></figure><p>接著，輸入初始化指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo init<br></code></pre></div></td></tr></table></figure><p>安裝所需檔案:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install<br></code></pre></div></td></tr></table></figure><p>接著會在所在資料夾看到以下檔案，如果有的話，目前為止都是對的。<br /><img src="/img/file.png" alt="檢查資料夾是否有這些檔案" /></p><p>這個時候，在黑窗輸入:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo server<br></code></pre></div></td></tr></table></figure><p>如果黑窗跳出這段訊息:<br /><img src="/img/hexos.png" alt="" /></p><p>去瀏覽器訪問http://localhost:4000/ 就會看到你目前已經建置好一個網頁了!<br /><img src="/img/landscape.jpg" alt="" /></p><h1 id="認識github-page"><a class="markdownIt-Anchor" href="#認識github-page"></a> 認識Github Page</h1><p><a href="https://github.com/">Github</a>為世界上最大的代碼存放網站和開源社群，而<strong>Github Page</strong>是GitHub提供的一個網頁代管服務，可以用於存放<strong>靜態網頁</strong>，例如:部落格、專案文件甚至整本書。一般GitHub Pages的網站使用github.io的子域名(<a href="http://username.github.io">username.github.io</a>)，但是使用者也可以使用第三方域名。</p><p>基於Github的穩定性及不用付費，將個人Blog架設在Github Page是最方便快速的方法之一。</p><h2 id="創立github-page"><a class="markdownIt-Anchor" href="#創立github-page"></a> 創立Github Page</h2><p>如果還沒有github帳號的，自己去註冊一個然後登入，這邊我就不講解了。</p><h3 id="建立repository"><a class="markdownIt-Anchor" href="#建立repository"></a> 建立Repository</h3><p>在github左上角，點new 新增一個repository。<br /><img src="/img/image_2022-02-08_23-15-44.png" alt="新增repo" /></p><p>repo名稱輸入[<a href="http://xn--username-im2mg83jo57cy0yb.github.io">你的帳號username.github.io</a>]<br /><img src="/img/image_2022-02-08_23-17-27.png" alt="" /></p><p>建立完後，username.github.io就是你的網域了。</p><h3 id="將網站部屬至github"><a class="markdownIt-Anchor" href="#將網站部屬至github"></a> 將網站部屬至github</h3><ol><li>首先要安裝hexo的git插件，在終端輸入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></div></td></tr></table></figure><ol start="2"><li>接著需要修改_config.yml檔案(\Desktop\First-website_config.yml)的deploy設定。</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/username/username.github.io.git<br>  branch: master<br></code></pre></div></td></tr></table></figure><ul><li>type: 部屬方式，這裡選擇git</li><li>repo: repository的網址</li><li>branch: 部屬分支，這裡選擇master</li></ul><ol start="3"><li>部屬</li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo deploy<br></code></pre></div></td></tr></table></figure><p>第一次部屬會要求登入github帳號。<br />部屬後，過個幾分鐘去你的網域看就能看到你的網站了，而到這基本上就完成網站架設了。</p><h1 id="常用指令"><a class="markdownIt-Anchor" href="#常用指令"></a> 常用指令</h1><ul><li>新增文章</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new [layout] &lt;title&gt;<br></code></pre></div></td></tr></table></figure><ul><li>清除靜態檔案</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean (可簡寫 cl)<br></code></pre></div></td></tr></table></figure><ul><li>產生靜態檔案</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo generate (可簡寫 g)<br></code></pre></div></td></tr></table></figure><ul><li>本地端運行</li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo server (可簡寫 s)<br></code></pre></div></td></tr></table></figure><p>更改文章後，可先在本地端運行看看。</p><p>一般來說，每次更新文章要重新佈署時，會打以下指令:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo cl<br>hexo g -d<br></code></pre></div></td></tr></table></figure><h1 id="結語"><a class="markdownIt-Anchor" href="#結語"></a> 結語</h1><p>實際使用到現在，hexo真的十分方便，指令不複雜，而且也有許多主題及插件可以使用。這算是我的第一篇文章，有打錯地方還請提醒，以後再慢慢豐富自己網站，</p><h2 id="參考文章"><a class="markdownIt-Anchor" href="#參考文章"></a> 參考文章</h2><ul><li><a href="https://hackmd.io/@Heidi-Liu/note-hexo-github">【學習筆記】如何使用 Hexo + GitHub Pages 架設個人網誌</a></li><li><a href="https://israynotarray.com/hexo/20190411/932826160/">架設 Hexo+GitHub</a></li></ul><p><em>last updated 22/02/08 23:52</em></p>]]></content>
    
    
    <categories>
      
      <category>網站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>photos</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<center>！相册描述【此行可删除】</center><center>自定义分隔符【此行可删除】</center><div class="gallery-page"><div class="gallery-list"><div class="gallery-column"><div class="gallery-item"><a href="【！相册文件夹名】"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- 台北 -</p></div><div class="gallery-item"><a href="【！相册文件夹名】"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- ！相册2 -</p></div></div><div class="gallery-column"><div class="gallery-item"><a href="sample"><img src="https://lh3.googleusercontent.com/enN96UPjBRdp7CYIkqo6p79O0aBJ-6UqEZNg80WB6nylLaDOlIreJTQwoVJ3UcKrcvUW3CyjvrkjfBFN2ZjvG5hb3iyupwQ2IqgmXWY7eh1hJ97WE3sAUnPThMbQTYd_q02AiKKDcsDKrARpHI--LrwxmC6sxt2Zvkt93Eggx0N79lEwr8UcB6YOBea81liIQ-TXEKntgCkwAARLW4LuaPXQYlQQvHTXHlp0mAEUl8mROreIymS6Aw77ter-fDlIi3U3HroOJUTMMkyzaAek9cqFO2jrh525KObfqGC2f7eKfLc-NLe8G1q4Cajufa4SfJ54zW2ZAQhRbmSIGVq0ioUuMYTbIOmHpGiYUxA_CE8RJixNHBlhKOTGoyfqMRQNZvR4l5259ZpDWqzXcuTV6t3HIZdfqpj0GSkyWpPNs5cy3VUckvcYxCTra8b7M-RHX0I0QxAQMvSSwLpvjxMFGa4osskrU04fd_wGxxyzh8M38VZJv8jpw7Z_4fsryl-iI4KahmmbNmHt6wsRBzHHUZN5rPWn_TcpO_fP_-s8heU1x38ZPyAC2Hb20WsfVwib_9jMOtWxjt_M97o4_nCRzUtYuTCwHY3aAPTp6w5MLG8t-ZCSvCViFuB2SwUnGfecnssb8MIl2R9rmizNI-4JtLMa5OT5AUotPIBAzsXZqWE_QCrOuGWTp4u2jR9DeNAsI_OGojppr7RMdEC5aZAyPI3jww=w1080-h607-no?authuser=0"></a><p>- 相册名 -</p></div></div><div class="gallery-column"><div class="gallery-item"><a href="sample"><img src="img/sample.jpg"></a><p>- 相册名 -</p></div></div></div></div></div><center>自定义分割线【此行可删除】</center>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>關於</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<div name="我是墙" id="recent-posts">  <!-- id=>type  recent-posts=>name    -->  <div name="我是画框">    <div name="我是纸">      <!--这里通过js挂载githubcalendar，也就是画画-->    </div>  </div></div><h3 id="嗨我是jin"><a class="markdownIt-Anchor" href="#嗨我是jin"></a> 嗨👋，我是Jin。</h3><h3 id="我是一名學生喜歡開發一些小東西歡迎一同交流"><a class="markdownIt-Anchor" href="#我是一名學生喜歡開發一些小東西歡迎一同交流"></a> 我是一名學生，喜歡開發一些小東西，歡迎一同交流!</h3><p>這個網站主要目的在於: 記錄我的學習筆記及一些心得，文章都是非常主觀的，如有錯誤請不吝指教。</p><h2 id="使用過的程式-軟體-技術-設備"><a class="markdownIt-Anchor" href="#使用過的程式-軟體-技術-設備"></a> 💻使用過的程式、軟體、技術、設備</h2><ul><li><img src="https://img.shields.io/badge/C-A8B9CC?style=for-the-badge&logo=c&logoColor=white">     <img src="https://img.shields.io/badge/C++-blue?style=for-the-badge&logo=c%2B%2B&logoColor=white">    <img src="https://img.shields.io/badge/Python-c2BC44?style=for-the-badge&logo=python&logoColor=white">    <img src="https://img.shields.io/badge/Javascript-yellow?style=for-the-badge&logo=javascript&logoColor=white">   <img src="https://img.shields.io/badge/Java-007396?style=for-the-badge&logo=Java&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/VS code-blue?style=for-the-badge&logo=VisualStudioCode&logoColor=ffffff">  <img src="https://img.shields.io/badge/Virtual Box-183A61?style=for-the-badge&logo=VirtualBox&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/Cloudflare-F38020?style=for-the-badge&logo=Cloudflare&logoColor=ffffff"> <img src="https://img.shields.io/badge/jsDelivr-E84D3D?style=for-the-badge&logo=jsDelivr&logoColor=ffffff"> <img src="https://img.shields.io/badge/git-F05032?style=for-the-badge&logo=git&logoColor=ffffff"></li><li><img src="https://img.shields.io/badge/Windows-11-2376bc?style=for-the-badge&logo=windows&logoColor=ffffff">  <img src="https://img.shields.io/badge/Ubuntu-18.04-E95420?style=for-the-badge&logo=ubuntu&logoColor=ffffff"></li></ul><h2 id="技能點"><a class="markdownIt-Anchor" href="#技能點"></a> 📷技能點</h2><ul><li><img src="https://img.shields.io/badge/Photoshop-31A8FF?style=for-the-badge&logo=AdobePhotoshop&logoColor=ffffff">  <img src="https://img.shields.io/badge/Premiere Pro-9999FF?style=for-the-badge&logo=AdobePremierePro&logoColor=ffffff"></li></ul><h2 id="技能點-2"><a class="markdownIt-Anchor" href="#技能點-2"></a> 🎮技能點</h2><ul><li><img src="https://img.shields.io/badge/Minecraft-62B47A?style=for-the-badge&logo=Minecraft&logoColor=ffffff">  <img src="https://img.shields.io/badge/Valorant-red?style=for-the-badge&logo=Velog&logoColor=ffffff"></li></ul><p>本部落格創建於2021/12/19，目前還在陸續加入一些插件，完善部落格功能，本人盡量在學習之虞多發些文章，也喜歡多與志同道合的夥伴們交流，歡迎加友鏈!</p><p><a href="/2021/01/26/diary/">日誌</a></p><script type="text/javascript" src="//rf.revolvermaps.com/0/0/8.js?i=5sbh3ssy88n&amp;m=7&amp;c=ff0000&amp;cr1=ffffff&amp;f=arial&amp;l=33&amp;bv=45" async="async"></script>]]></content>
    
  </entry>
  
  
  
</search>
